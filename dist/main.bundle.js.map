{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://gpu001/./node_modules/3d-view-controls/camera.js","webpack://gpu001/./node_modules/3d-view/view.js","webpack://gpu001/./node_modules/binary-search-bounds/search-bounds.js","webpack://gpu001/./node_modules/cubic-hermite/hermite.js","webpack://gpu001/./node_modules/filtered-vector/fvec.js","webpack://gpu001/./node_modules/gl-mat4/clone.js","webpack://gpu001/./node_modules/gl-mat4/create.js","webpack://gpu001/./node_modules/gl-mat4/determinant.js","webpack://gpu001/./node_modules/gl-mat4/fromQuat.js","webpack://gpu001/./node_modules/gl-mat4/fromRotationTranslation.js","webpack://gpu001/./node_modules/gl-mat4/identity.js","webpack://gpu001/./node_modules/gl-mat4/invert.js","webpack://gpu001/./node_modules/gl-mat4/lookAt.js","webpack://gpu001/./node_modules/gl-mat4/multiply.js","webpack://gpu001/./node_modules/gl-mat4/rotate.js","webpack://gpu001/./node_modules/gl-mat4/rotateX.js","webpack://gpu001/./node_modules/gl-mat4/rotateY.js","webpack://gpu001/./node_modules/gl-mat4/rotateZ.js","webpack://gpu001/./node_modules/gl-mat4/scale.js","webpack://gpu001/./node_modules/gl-mat4/translate.js","webpack://gpu001/./node_modules/gl-mat4/transpose.js","webpack://gpu001/./node_modules/gl-matrix/esm/common.js","webpack://gpu001/./node_modules/gl-matrix/esm/mat2.js","webpack://gpu001/./node_modules/gl-matrix/esm/mat2d.js","webpack://gpu001/./node_modules/gl-matrix/esm/mat3.js","webpack://gpu001/./node_modules/gl-matrix/esm/mat4.js","webpack://gpu001/./node_modules/gl-matrix/esm/vec3.js","webpack://gpu001/./node_modules/gl-matrix/esm/vec4.js","webpack://gpu001/./node_modules/gl-matrix/esm/quat.js","webpack://gpu001/./node_modules/gl-matrix/esm/quat2.js","webpack://gpu001/./node_modules/gl-matrix/esm/vec2.js","webpack://gpu001/./node_modules/gl-quat/slerp.js","webpack://gpu001/./node_modules/gl-vec3/cross.js","webpack://gpu001/./node_modules/gl-vec3/dot.js","webpack://gpu001/./node_modules/gl-vec3/length.js","webpack://gpu001/./node_modules/gl-vec3/lerp.js","webpack://gpu001/./node_modules/gl-vec3/normalize.js","webpack://gpu001/./node_modules/has-passive-events/index.js","webpack://gpu001/./node_modules/is-browser/client.js","webpack://gpu001/./node_modules/mat4-decompose/index.js","webpack://gpu001/./node_modules/mat4-decompose/normalize.js","webpack://gpu001/./node_modules/mat4-interpolate/index.js","webpack://gpu001/./node_modules/mat4-recompose/index.js","webpack://gpu001/./node_modules/matrix-camera-controller/matrix.js","webpack://gpu001/./node_modules/mouse-change/mouse-listen.js","webpack://gpu001/./node_modules/mouse-event-offset/index.js","webpack://gpu001/./node_modules/mouse-event/mouse.js","webpack://gpu001/./node_modules/mouse-wheel/wheel.js","webpack://gpu001/./node_modules/orbit-camera-controller/lib/quatFromFrame.js","webpack://gpu001/./node_modules/orbit-camera-controller/orbit.js","webpack://gpu001/./node_modules/parse-unit/index.js","webpack://gpu001/./node_modules/quat-slerp/index.js","webpack://gpu001/./node_modules/right-now/browser.js","webpack://gpu001/./node_modules/to-px/browser.js","webpack://gpu001/./src/helper.ts","webpack://gpu001/./src/light.ts","webpack://gpu001/./src/math-func.ts","webpack://gpu001/./src/shaders.ts","webpack://gpu001/./src/vertex_data.ts","webpack://gpu001/./node_modules/turntable-camera-controller/turntable.js","webpack://gpu001/webpack/bootstrap","webpack://gpu001/webpack/runtime/define property getters","webpack://gpu001/webpack/runtime/global","webpack://gpu001/webpack/runtime/hasOwnProperty shorthand","webpack://gpu001/webpack/runtime/make namespace object","webpack://gpu001/./src/main.ts"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = createCamera\r\n\r\nvar now         = require('right-now')\r\nvar createView  = require('3d-view')\r\nvar mouseChange = require('mouse-change')\r\nvar mouseWheel  = require('mouse-wheel')\r\nvar mouseOffset = require('mouse-event-offset')\r\nvar hasPassive  = require('has-passive-events')\r\n\r\nfunction createCamera(element, options) {\r\n  element = element || document.body\r\n  options = options || {}\r\n\r\n  var limits  = [ 0.01, Infinity ]\r\n  if('distanceLimits' in options) {\r\n    limits[0] = options.distanceLimits[0]\r\n    limits[1] = options.distanceLimits[1]\r\n  }\r\n  if('zoomMin' in options) {\r\n    limits[0] = options.zoomMin\r\n  }\r\n  if('zoomMax' in options) {\r\n    limits[1] = options.zoomMax\r\n  }\r\n\r\n  var view = createView({\r\n    center: options.center || [0,0,0],\r\n    up:     options.up     || [0,1,0],\r\n    eye:    options.eye    || [0,0,10],\r\n    mode:   options.mode   || 'orbit',\r\n    distanceLimits: limits\r\n  })\r\n\r\n  var pmatrix = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n  var distance = 0.0\r\n  var width   = element.clientWidth\r\n  var height  = element.clientHeight\r\n\r\n  var camera = {\r\n    view:               view,\r\n    element:            element,\r\n    delay:              options.delay          || 16,\r\n    rotateSpeed:        options.rotateSpeed    || 1,\r\n    zoomSpeed:          options.zoomSpeed      || 1,\r\n    translateSpeed:     options.translateSpeed || 1,\r\n    flipX:              !!options.flipX,\r\n    flipY:              !!options.flipY,\r\n    modes:              view.modes,\r\n    tick: function() {\r\n      var t = now()\r\n      var delay = this.delay\r\n      view.idle(t-delay)\r\n      view.flush(t-(100+delay*2))\r\n      var ctime = t - 2 * delay\r\n      view.recalcMatrix(ctime)\r\n      var allEqual = true\r\n      var matrix = view.computedMatrix\r\n      for(var i=0; i<16; ++i) {\r\n        allEqual = allEqual && (pmatrix[i] === matrix[i])\r\n        pmatrix[i] = matrix[i]\r\n      }\r\n      var sizeChanged =\r\n          element.clientWidth === width &&\r\n          element.clientHeight === height\r\n      width  = element.clientWidth\r\n      height = element.clientHeight\r\n      if(allEqual) {\r\n        return !sizeChanged\r\n      }\r\n      distance = Math.exp(view.computedRadius[0])\r\n      return true\r\n    },\r\n    lookAt: function(center, eye, up) {\r\n      view.lookAt(view.lastT(), center, eye, up)\r\n    },\r\n    rotate: function(pitch, yaw, roll) {\r\n      view.rotate(view.lastT(), pitch, yaw, roll)\r\n    },\r\n    pan: function(dx, dy, dz) {\r\n      view.pan(view.lastT(), dx, dy, dz)\r\n    },\r\n    translate: function(dx, dy, dz) {\r\n      view.translate(view.lastT(), dx, dy, dz)\r\n    }\r\n  }\r\n\r\n  Object.defineProperties(camera, {\r\n    matrix: {\r\n      get: function() {\r\n        return view.computedMatrix\r\n      },\r\n      set: function(mat) {\r\n        view.setMatrix(view.lastT(), mat)\r\n        return view.computedMatrix\r\n      },\r\n      enumerable: true\r\n    },\r\n    mode: {\r\n      get: function() {\r\n        return view.getMode()\r\n      },\r\n      set: function(mode) {\r\n        view.setMode(mode)\r\n        return view.getMode()\r\n      },\r\n      enumerable: true\r\n    },\r\n    center: {\r\n      get: function() {\r\n        return view.computedCenter\r\n      },\r\n      set: function(ncenter) {\r\n        view.lookAt(view.lastT(), ncenter)\r\n        return view.computedCenter\r\n      },\r\n      enumerable: true\r\n    },\r\n    eye: {\r\n      get: function() {\r\n        return view.computedEye\r\n      },\r\n      set: function(neye) {\r\n        view.lookAt(view.lastT(), null, neye)\r\n        return view.computedEye\r\n      },\r\n      enumerable: true\r\n    },\r\n    up: {\r\n      get: function() {\r\n        return view.computedUp\r\n      },\r\n      set: function(nup) {\r\n        view.lookAt(view.lastT(), null, null, nup)\r\n        return view.computedUp\r\n      },\r\n      enumerable: true\r\n    },\r\n    distance: {\r\n      get: function() {\r\n        return distance\r\n      },\r\n      set: function(d) {\r\n        view.setDistance(view.lastT(), d)\r\n        return d\r\n      },\r\n      enumerable: true\r\n    },\r\n    distanceLimits: {\r\n      get: function() {\r\n        return view.getDistanceLimits(limits)\r\n      },\r\n      set: function(v) {\r\n        view.setDistanceLimits(v)\r\n        return v\r\n      },\r\n      enumerable: true\r\n    }\r\n  })\r\n\r\n  element.addEventListener('contextmenu', function(ev) {\r\n    ev.preventDefault()\r\n    return false\r\n  })\r\n\r\n  var lastX = 0, lastY = 0, lastMods = {shift: false, control: false, alt: false, meta: false}\r\n  mouseChange(element, handleInteraction)\r\n\r\n  //enable simple touch interactions\r\n  element.addEventListener('touchstart', function (ev) {\r\n    var xy = mouseOffset(ev.changedTouches[0], element)\r\n    handleInteraction(0, xy[0], xy[1], lastMods)\r\n    handleInteraction(1, xy[0], xy[1], lastMods)\r\n\r\n    ev.preventDefault()\r\n  }, hasPassive ? {passive: false} : false)\r\n\r\n  element.addEventListener('touchmove', function (ev) {\r\n    var xy = mouseOffset(ev.changedTouches[0], element)\r\n    handleInteraction(1, xy[0], xy[1], lastMods)\r\n\r\n    ev.preventDefault()\r\n  }, hasPassive ? {passive: false} : false)\r\n\r\n  element.addEventListener('touchend', function (ev) {\r\n    var xy = mouseOffset(ev.changedTouches[0], element)\r\n    handleInteraction(0, lastX, lastY, lastMods)\r\n\r\n    ev.preventDefault()\r\n  }, hasPassive ? {passive: false} : false)\r\n\r\n  function handleInteraction (buttons, x, y, mods) {\r\n    var scale = 1.0 / element.clientHeight\r\n    var dx    = scale * (x - lastX)\r\n    var dy    = scale * (y - lastY)\r\n\r\n    var flipX = camera.flipX ? 1 : -1\r\n    var flipY = camera.flipY ? 1 : -1\r\n\r\n    var drot  = Math.PI * camera.rotateSpeed\r\n\r\n    var t = now()\r\n\r\n    if(buttons & 1) {\r\n      if(mods.shift) {\r\n        view.rotate(t, 0, 0, -dx * drot)\r\n      } else {\r\n        view.rotate(t, flipX * drot * dx, -flipY * drot * dy, 0)\r\n      }\r\n    } else if(buttons & 2) {\r\n      view.pan(t, -camera.translateSpeed * dx * distance, camera.translateSpeed * dy * distance, 0)\r\n    } else if(buttons & 4) {\r\n      var kzoom = camera.zoomSpeed * dy / window.innerHeight * (t - view.lastT()) * 50.0\r\n      view.pan(t, 0, 0, distance * (Math.exp(kzoom) - 1))\r\n    }\r\n\r\n    lastX = x\r\n    lastY = y\r\n    lastMods = mods\r\n  }\r\n\r\n  mouseWheel(element, function(dx, dy, dz) {\r\n    var flipX = camera.flipX ? 1 : -1\r\n    var flipY = camera.flipY ? 1 : -1\r\n    var t = now()\r\n    if(Math.abs(dx) > Math.abs(dy)) {\r\n      view.rotate(t, 0, 0, -dx * flipX * Math.PI * camera.rotateSpeed / window.innerWidth)\r\n    } else {\r\n      var kzoom = camera.zoomSpeed * flipY * dy / window.innerHeight * (t - view.lastT()) / 100.0\r\n      view.pan(t, 0, 0, distance * (Math.exp(kzoom) - 1))\r\n    }\r\n  }, true)\r\n\r\n  return camera\r\n}\r\n","'use strict'\n\nmodule.exports = createViewController\n\nvar createTurntable = require('turntable-camera-controller')\nvar createOrbit     = require('orbit-camera-controller')\nvar createMatrix    = require('matrix-camera-controller')\n\nfunction ViewController(controllers, mode) {\n  this._controllerNames = Object.keys(controllers)\n  this._controllerList = this._controllerNames.map(function(n) {\n    return controllers[n]\n  })\n  this._mode   = mode\n  this._active = controllers[mode]\n  if(!this._active) {\n    this._mode   = 'turntable'\n    this._active = controllers.turntable\n  }\n  this.modes = this._controllerNames\n  this.computedMatrix = this._active.computedMatrix\n  this.computedEye    = this._active.computedEye\n  this.computedUp     = this._active.computedUp\n  this.computedCenter = this._active.computedCenter\n  this.computedRadius = this._active.computedRadius\n}\n\nvar proto = ViewController.prototype\n\nproto.flush = function(a0) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].flush(a0)\n  }\n}\nproto.idle = function(a0) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].idle(a0)\n  }\n}\nproto.lookAt = function(a0, a1, a2, a3) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].lookAt(a0, a1, a2, a3)\n  }\n}\nproto.rotate = function(a0, a1, a2, a3) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].rotate(a0, a1, a2, a3)\n  }\n}\nproto.pan = function(a0, a1, a2, a3) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].pan(a0, a1, a2, a3)\n  }\n}\nproto.translate = function(a0, a1, a2, a3) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].translate(a0, a1, a2, a3)\n  }\n}\nproto.setMatrix = function(a0, a1) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].setMatrix(a0, a1)\n  }\n}\nproto.setDistanceLimits = function(a0, a1) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].setDistanceLimits(a0, a1)\n  }\n}\nproto.setDistance = function(a0, a1) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].setDistance(a0, a1)\n  }\n}\n\nproto.recalcMatrix = function(t) {\n  this._active.recalcMatrix(t)\n}\n\nproto.getDistance = function(t) {\n  return this._active.getDistance(t)\n}\nproto.getDistanceLimits = function(out) {\n  return this._active.getDistanceLimits(out)\n}\n\nproto.lastT = function() {\n  return this._active.lastT()\n}\n\nproto.setMode = function(mode) {\n  if(mode === this._mode) {\n    return\n  }\n  var idx = this._controllerNames.indexOf(mode)\n  if(idx < 0) {\n    return\n  }\n  var prev  = this._active\n  var next  = this._controllerList[idx]\n  var lastT = Math.max(prev.lastT(), next.lastT())\n\n  prev.recalcMatrix(lastT)\n  next.setMatrix(lastT, prev.computedMatrix)\n\n  this._active = next\n  this._mode   = mode\n\n  //Update matrix properties\n  this.computedMatrix = this._active.computedMatrix\n  this.computedEye    = this._active.computedEye\n  this.computedUp     = this._active.computedUp\n  this.computedCenter = this._active.computedCenter\n  this.computedRadius = this._active.computedRadius\n}\n\nproto.getMode = function() {\n  return this._mode\n}\n\nfunction createViewController(options) {\n  options = options || {}\n\n  var eye       = options.eye    || [0,0,1]\n  var center    = options.center || [0,0,0]\n  var up        = options.up     || [0,1,0]\n  var limits    = options.distanceLimits || [0, Infinity]\n  var mode      = options.mode   || 'turntable'\n\n  var turntable = createTurntable()\n  var orbit     = createOrbit()\n  var matrix    = createMatrix()\n\n  turntable.setDistanceLimits(limits[0], limits[1])\n  turntable.lookAt(0, eye, center, up)\n  orbit.setDistanceLimits(limits[0], limits[1])\n  orbit.lookAt(0, eye, center, up)\n  matrix.setDistanceLimits(limits[0], limits[1])\n  matrix.lookAt(0, eye, center, up)\n\n  return new ViewController({\n    turntable: turntable,\n    orbit: orbit,\n    matrix: matrix\n  }, mode)\n}","\"use strict\"\n\n// (a, y, c, l, h) = (array, y[, cmp, lo, hi])\n\nfunction ge(a, y, c, l, h) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p >= 0) { i = m; h = m - 1 } else { l = m + 1 }\n  }\n  return i;\n};\n\nfunction gt(a, y, c, l, h) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p > 0) { i = m; h = m - 1 } else { l = m + 1 }\n  }\n  return i;\n};\n\nfunction lt(a, y, c, l, h) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p < 0) { i = m; l = m + 1 } else { h = m - 1 }\n  }\n  return i;\n};\n\nfunction le(a, y, c, l, h) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p <= 0) { i = m; l = m + 1 } else { h = m - 1 }\n  }\n  return i;\n};\n\nfunction eq(a, y, c, l, h) {\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p === 0) { return m }\n    if (p <= 0) { l = m + 1 } else { h = m - 1 }\n  }\n  return -1;\n};\n\nfunction norm(a, y, c, l, h, f) {\n  if (typeof c === 'function') {\n    return f(a, y, c, (l === undefined) ? 0 : l | 0, (h === undefined) ? a.length - 1 : h | 0);\n  }\n  return f(a, y, undefined, (c === undefined) ? 0 : c | 0, (l === undefined) ? a.length - 1 : l | 0);\n}\n\nmodule.exports = {\n  ge: function(a, y, c, l, h) { return norm(a, y, c, l, h, ge)},\n  gt: function(a, y, c, l, h) { return norm(a, y, c, l, h, gt)},\n  lt: function(a, y, c, l, h) { return norm(a, y, c, l, h, lt)},\n  le: function(a, y, c, l, h) { return norm(a, y, c, l, h, le)},\n  eq: function(a, y, c, l, h) { return norm(a, y, c, l, h, eq)}\n}\n","\"use strict\"\n\nfunction dcubicHermite(p0, v0, p1, v1, t, f) {\n  var dh00 = 6*t*t-6*t,\n      dh10 = 3*t*t-4*t + 1,\n      dh01 = -6*t*t+6*t,\n      dh11 = 3*t*t-2*t\n  if(p0.length) {\n    if(!f) {\n      f = new Array(p0.length)\n    }\n    for(var i=p0.length-1; i>=0; --i) {\n      f[i] = dh00*p0[i] + dh10*v0[i] + dh01*p1[i] + dh11*v1[i]\n    }\n    return f\n  }\n  return dh00*p0 + dh10*v0 + dh01*p1[i] + dh11*v1\n}\n\nfunction cubicHermite(p0, v0, p1, v1, t, f) {\n  var ti  = (t-1), t2 = t*t, ti2 = ti*ti,\n      h00 = (1+2*t)*ti2,\n      h10 = t*ti2,\n      h01 = t2*(3-2*t),\n      h11 = t2*ti\n  if(p0.length) {\n    if(!f) {\n      f = new Array(p0.length)\n    }\n    for(var i=p0.length-1; i>=0; --i) {\n      f[i] = h00*p0[i] + h10*v0[i] + h01*p1[i] + h11*v1[i]\n    }\n    return f\n  }\n  return h00*p0 + h10*v0 + h01*p1 + h11*v1\n}\n\nmodule.exports = cubicHermite\nmodule.exports.derivative = dcubicHermite","'use strict'\n\nmodule.exports = createFilteredVector\n\nvar cubicHermite = require('cubic-hermite')\nvar bsearch = require('binary-search-bounds')\n\nfunction clamp(lo, hi, x) {\n  return Math.min(hi, Math.max(lo, x))\n}\n\nfunction FilteredVector(state0, velocity0, t0) {\n  this.dimension  = state0.length\n  this.bounds     = [ new Array(this.dimension), new Array(this.dimension) ]\n  for(var i=0; i<this.dimension; ++i) {\n    this.bounds[0][i] = -Infinity\n    this.bounds[1][i] = Infinity\n  }\n  this._state     = state0.slice().reverse()\n  this._velocity  = velocity0.slice().reverse()\n  this._time      = [ t0 ]\n  this._scratch   = [ state0.slice(), state0.slice(), state0.slice(), state0.slice(), state0.slice() ]\n}\n\nvar proto = FilteredVector.prototype\n\nproto.flush = function(t) {\n  var idx = bsearch.gt(this._time, t) - 1\n  if(idx <= 0) {\n    return\n  }\n  this._time.splice(0, idx)\n  this._state.splice(0, idx * this.dimension)\n  this._velocity.splice(0, idx * this.dimension)\n}\n\nproto.curve = function(t) {\n  var time      = this._time\n  var n         = time.length\n  var idx       = bsearch.le(time, t)\n  var result    = this._scratch[0]\n  var state     = this._state\n  var velocity  = this._velocity\n  var d         = this.dimension\n  var bounds    = this.bounds\n  if(idx < 0) {\n    var ptr = d-1\n    for(var i=0; i<d; ++i, --ptr) {\n      result[i] = state[ptr]\n    }\n  } else if(idx >= n-1) {\n    var ptr = state.length-1\n    var tf = t - time[n-1]\n    for(var i=0; i<d; ++i, --ptr) {\n      result[i] = state[ptr] + tf * velocity[ptr]\n    }\n  } else {\n    var ptr = d * (idx+1) - 1\n    var t0  = time[idx]\n    var t1  = time[idx+1]\n    var dt  = (t1 - t0) || 1.0\n    var x0  = this._scratch[1]\n    var x1  = this._scratch[2]\n    var v0  = this._scratch[3]\n    var v1  = this._scratch[4]\n    var steady = true\n    for(var i=0; i<d; ++i, --ptr) {\n      x0[i] = state[ptr]\n      v0[i] = velocity[ptr] * dt\n      x1[i] = state[ptr+d]\n      v1[i] = velocity[ptr+d] * dt\n      steady = steady && (x0[i] === x1[i] && v0[i] === v1[i] && v0[i] === 0.0)\n    }\n    if(steady) {\n      for(var i=0; i<d; ++i) {\n        result[i] = x0[i]\n      }\n    } else {\n      cubicHermite(x0, v0, x1, v1, (t-t0)/dt, result)\n    }\n  }\n  var lo = bounds[0]\n  var hi = bounds[1]\n  for(var i=0; i<d; ++i) {\n    result[i] = clamp(lo[i], hi[i], result[i])\n  }\n  return result\n}\n\nproto.dcurve = function(t) {\n  var time     = this._time\n  var n        = time.length\n  var idx      = bsearch.le(time, t)\n  var result   = this._scratch[0]\n  var state    = this._state\n  var velocity = this._velocity\n  var d        = this.dimension\n  if(idx >= n-1) {\n    var ptr = state.length-1\n    var tf = t - time[n-1]\n    for(var i=0; i<d; ++i, --ptr) {\n      result[i] = velocity[ptr]\n    }\n  } else {\n    var ptr = d * (idx+1) - 1\n    var t0 = time[idx]\n    var t1 = time[idx+1]\n    var dt = (t1 - t0) || 1.0\n    var x0 = this._scratch[1]\n    var x1 = this._scratch[2]\n    var v0 = this._scratch[3]\n    var v1 = this._scratch[4]\n    var steady = true\n    for(var i=0; i<d; ++i, --ptr) {\n      x0[i] = state[ptr]\n      v0[i] = velocity[ptr] * dt\n      x1[i] = state[ptr+d]\n      v1[i] = velocity[ptr+d] * dt\n      steady = steady && (x0[i] === x1[i] && v0[i] === v1[i] && v0[i] === 0.0)\n    }\n    if(steady) {\n      for(var i=0; i<d; ++i) {\n        result[i] = 0.0\n      }\n    } else {\n      cubicHermite.derivative(x0, v0, x1, v1, (t-t0)/dt, result)\n      for(var i=0; i<d; ++i) {\n        result[i] /= dt\n      }\n    }\n  }\n  return result\n}\n\nproto.lastT = function() {\n  var time = this._time\n  return time[time.length-1]\n}\n\nproto.stable = function() {\n  var velocity = this._velocity\n  var ptr = velocity.length\n  for(var i=this.dimension-1; i>=0; --i) {\n    if(velocity[--ptr]) {\n      return false\n    }\n  }\n  return true\n}\n\nproto.jump = function(t) {\n  var t0 = this.lastT()\n  var d  = this.dimension\n  if(t < t0 || arguments.length !== d+1) {\n    return\n  }\n  var state     = this._state\n  var velocity  = this._velocity\n  var ptr       = state.length-this.dimension\n  var bounds    = this.bounds\n  var lo        = bounds[0]\n  var hi        = bounds[1]\n  this._time.push(t0, t)\n  for(var j=0; j<2; ++j) {\n    for(var i=0; i<d; ++i) {\n      state.push(state[ptr++])\n      velocity.push(0)\n    }\n  }\n  this._time.push(t)\n  for(var i=d; i>0; --i) {\n    state.push(clamp(lo[i-1], hi[i-1], arguments[i]))\n    velocity.push(0)\n  }\n}\n\nproto.push = function(t) {\n  var t0 = this.lastT()\n  var d  = this.dimension\n  if(t < t0 || arguments.length !== d+1) {\n    return\n  }\n  var state     = this._state\n  var velocity  = this._velocity\n  var ptr       = state.length-this.dimension\n  var dt        = t - t0\n  var bounds    = this.bounds\n  var lo        = bounds[0]\n  var hi        = bounds[1]\n  var sf        = (dt > 1e-6) ? 1/dt : 0\n  this._time.push(t)\n  for(var i=d; i>0; --i) {\n    var xc = clamp(lo[i-1], hi[i-1], arguments[i])\n    state.push(xc)\n    velocity.push((xc - state[ptr++]) * sf)\n  }\n}\n\nproto.set = function(t) {\n  var d = this.dimension\n  if(t < this.lastT() || arguments.length !== d+1) {\n    return\n  }\n  var state     = this._state\n  var velocity  = this._velocity\n  var bounds    = this.bounds\n  var lo        = bounds[0]\n  var hi        = bounds[1]\n  this._time.push(t)\n  for(var i=d; i>0; --i) {\n    state.push(clamp(lo[i-1], hi[i-1], arguments[i]))\n    velocity.push(0)\n  }\n}\n\nproto.move = function(t) {\n  var t0 = this.lastT()\n  var d  = this.dimension\n  if(t <= t0 || arguments.length !== d+1) {\n    return\n  }\n  var state    = this._state\n  var velocity = this._velocity\n  var statePtr = state.length - this.dimension\n  var bounds   = this.bounds\n  var lo       = bounds[0]\n  var hi       = bounds[1]\n  var dt       = t - t0\n  var sf       = (dt > 1e-6) ? 1/dt : 0.0\n  this._time.push(t)\n  for(var i=d; i>0; --i) {\n    var dx = arguments[i]\n    state.push(clamp(lo[i-1], hi[i-1], state[statePtr++] + dx))\n    velocity.push(dx * sf)\n  }\n}\n\nproto.idle = function(t) {\n  var t0 = this.lastT()\n  if(t < t0) {\n    return\n  }\n  var d        = this.dimension\n  var state    = this._state\n  var velocity = this._velocity\n  var statePtr = state.length-d\n  var bounds   = this.bounds\n  var lo       = bounds[0]\n  var hi       = bounds[1]\n  var dt       = t - t0\n  this._time.push(t)\n  for(var i=d-1; i>=0; --i) {\n    state.push(clamp(lo[i], hi[i], state[statePtr] + dt * velocity[statePtr]))\n    velocity.push(0)\n    statePtr += 1\n  }\n}\n\nfunction getZero(d) {\n  var result = new Array(d)\n  for(var i=0; i<d; ++i) {\n    result[i] = 0.0\n  }\n  return result\n}\n\nfunction createFilteredVector(initState, initVelocity, initTime) {\n  switch(arguments.length) {\n    case 0:\n      return new FilteredVector([0], [0], 0)\n    case 1:\n      if(typeof initState === 'number') {\n        var zero = getZero(initState)\n        return new FilteredVector(zero, zero, 0)\n      } else {\n        return new FilteredVector(initState, getZero(initState.length), 0)\n      }\n    case 2:\n      if(typeof initVelocity === 'number') {\n        var zero = getZero(initState.length)\n        return new FilteredVector(initState, zero, +initVelocity)\n      } else {\n        initTime = 0\n      }\n    case 3:\n      if(initState.length !== initVelocity.length) {\n        throw new Error('state and velocity lengths must match')\n      }\n      return new FilteredVector(initState, initVelocity, initTime)\n  }\n}\n","module.exports = clone;\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nfunction clone(a) {\n    var out = new Float32Array(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = create;\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nfunction create() {\n    var out = new Float32Array(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = determinant;\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};","module.exports = fromQuat;\n\n/**\n * Creates a matrix from a quaternion rotation.\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @returns {mat4} out\n */\nfunction fromQuat(out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};","module.exports = fromRotationTranslation;\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslation(out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};","module.exports = identity;\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = invert;\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction invert(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};","var identity = require('./identity');\n\nmodule.exports = lookAt;\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < 0.000001 &&\n        Math.abs(eyey - centery) < 0.000001 &&\n        Math.abs(eyez - centerz) < 0.000001) {\n        return identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};","module.exports = multiply;\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};","module.exports = rotate;\n\n/**\n * Rotates a mat4 by the given angle\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction rotate(out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < 0.000001) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};","module.exports = rotateX;\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateX(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};","module.exports = rotateY;\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateY(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};","module.exports = rotateZ;\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateZ(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};","module.exports = scale;\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nfunction scale(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = translate;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nfunction translate(out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};","module.exports = transpose;\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2\n *\n * @param {ReadonlyMat2} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2\n *\n * @param {ReadonlyMat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {ReadonlyMat2} L the lower triangular matrix\n * @param {ReadonlyMat2} D the diagonal matrix\n * @param {ReadonlyMat2} U the upper triangular matrix\n * @param {ReadonlyMat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 2x3 Matrix\n * @module mat2d\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, b,\n *  c, d,\n *  tx, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, b, 0,\n *  c, d, 0,\n *  tx, ty, 1]\n * </pre>\n * The last column is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2d} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat2d} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2d\n *\n * @param {ReadonlyMat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\nexport var getReal = quat.copy;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\nexport var setReal = quat.copy;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = quat.dot;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\nexport var length = quat.length;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\nexport function str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","module.exports = slerp\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nfunction slerp (out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    bx = b[0], by = b[1], bz = b[2], bw = b[3]\n\n  var omega, cosom, sinom, scale0, scale1\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom\n    bx = -bx\n    by = -by\n    bz = -bz\n    bw = -bw\n  }\n  // calculate coefficients\n  if ((1.0 - cosom) > 0.000001) {\n    // standard case (slerp)\n    omega = Math.acos(cosom)\n    sinom = Math.sin(omega)\n    scale0 = Math.sin((1.0 - t) * omega) / sinom\n    scale1 = Math.sin(t * omega) / sinom\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t\n    scale1 = t\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx\n  out[1] = scale0 * ay + scale1 * by\n  out[2] = scale0 * az + scale1 * bz\n  out[3] = scale0 * aw + scale1 * bw\n\n  return out\n}\n","module.exports = cross;\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2]\n\n    out[0] = ay * bz - az * by\n    out[1] = az * bx - ax * bz\n    out[2] = ax * by - ay * bx\n    return out\n}","module.exports = dot;\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\n}","module.exports = length;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    return Math.sqrt(x*x + y*y + z*z)\n}","module.exports = lerp;\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2]\n    out[0] = ax + t * (b[0] - ax)\n    out[1] = ay + t * (b[1] - ay)\n    out[2] = az + t * (b[2] - az)\n    return out\n}","module.exports = normalize;\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nfunction normalize(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    var len = x*x + y*y + z*z\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len)\n        out[0] = a[0] * len\n        out[1] = a[1] * len\n        out[2] = a[2] * len\n    }\n    return out\n}","'use strict'\r\n\r\nvar isBrowser = require('is-browser')\r\n\r\nfunction detect() {\r\n\tvar supported = false\r\n\r\n\ttry {\r\n\t\tvar opts = Object.defineProperty({}, 'passive', {\r\n\t\t\tget: function() {\r\n\t\t\t\tsupported = true\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\twindow.addEventListener('test', null, opts)\r\n\t\twindow.removeEventListener('test', null, opts)\r\n\t} catch(e) {\r\n\t\tsupported = false\r\n\t}\r\n\r\n\treturn supported\r\n}\r\n\r\nmodule.exports = isBrowser && detect()\r\n","module.exports = true;","/*jshint unused:true*/\n/*\nInput:  matrix      ; a 4x4 matrix\nOutput: translation ; a 3 component vector\n        scale       ; a 3 component vector\n        skew        ; skew factors XY,XZ,YZ represented as a 3 component vector\n        perspective ; a 4 component vector\n        quaternion  ; a 4 component vector\nReturns false if the matrix cannot be decomposed, true if it can\n\n\nReferences:\nhttps://github.com/kamicane/matrix3d/blob/master/lib/Matrix3d.js\nhttps://github.com/ChromiumWebApps/chromium/blob/master/ui/gfx/transform_util.cc\nhttp://www.w3.org/TR/css3-transforms/#decomposing-a-3d-matrix\n*/\n\nvar normalize = require('./normalize')\n\nvar create = require('gl-mat4/create')\nvar clone = require('gl-mat4/clone')\nvar determinant = require('gl-mat4/determinant')\nvar invert = require('gl-mat4/invert')\nvar transpose = require('gl-mat4/transpose')\nvar vec3 = {\n    length: require('gl-vec3/length'),\n    normalize: require('gl-vec3/normalize'),\n    dot: require('gl-vec3/dot'),\n    cross: require('gl-vec3/cross')\n}\n\nvar tmp = create()\nvar perspectiveMatrix = create()\nvar tmpVec4 = [0, 0, 0, 0]\nvar row = [ [0,0,0], [0,0,0], [0,0,0] ]\nvar pdum3 = [0,0,0]\n\nmodule.exports = function decomposeMat4(matrix, translation, scale, skew, perspective, quaternion) {\n    if (!translation) translation = [0,0,0]\n    if (!scale) scale = [0,0,0]\n    if (!skew) skew = [0,0,0]\n    if (!perspective) perspective = [0,0,0,1]\n    if (!quaternion) quaternion = [0,0,0,1]\n\n    //normalize, if not possible then bail out early\n    if (!normalize(tmp, matrix))\n        return false\n\n    // perspectiveMatrix is used to solve for perspective, but it also provides\n    // an easy way to test for singularity of the upper 3x3 component.\n    clone(perspectiveMatrix, tmp)\n\n    perspectiveMatrix[3] = 0\n    perspectiveMatrix[7] = 0\n    perspectiveMatrix[11] = 0\n    perspectiveMatrix[15] = 1\n\n    // If the perspectiveMatrix is not invertible, we are also unable to\n    // decompose, so we'll bail early. Constant taken from SkMatrix44::invert.\n    if (Math.abs(determinant(perspectiveMatrix) < 1e-8))\n        return false\n\n    var a03 = tmp[3], a13 = tmp[7], a23 = tmp[11],\n            a30 = tmp[12], a31 = tmp[13], a32 = tmp[14], a33 = tmp[15]\n\n    // First, isolate perspective.\n    if (a03 !== 0 || a13 !== 0 || a23 !== 0) {\n        tmpVec4[0] = a03\n        tmpVec4[1] = a13\n        tmpVec4[2] = a23\n        tmpVec4[3] = a33\n\n        // Solve the equation by inverting perspectiveMatrix and multiplying\n        // rightHandSide by the inverse.\n        // resuing the perspectiveMatrix here since it's no longer needed\n        var ret = invert(perspectiveMatrix, perspectiveMatrix)\n        if (!ret) return false\n        transpose(perspectiveMatrix, perspectiveMatrix)\n\n        //multiply by transposed inverse perspective matrix, into perspective vec4\n        vec4multMat4(perspective, tmpVec4, perspectiveMatrix)\n    } else { \n        //no perspective\n        perspective[0] = perspective[1] = perspective[2] = 0\n        perspective[3] = 1\n    }\n\n    // Next take care of translation\n    translation[0] = a30\n    translation[1] = a31\n    translation[2] = a32\n\n    // Now get scale and shear. 'row' is a 3 element array of 3 component vectors\n    mat3from4(row, tmp)\n\n    // Compute X scale factor and normalize first row.\n    scale[0] = vec3.length(row[0])\n    vec3.normalize(row[0], row[0])\n\n    // Compute XY shear factor and make 2nd row orthogonal to 1st.\n    skew[0] = vec3.dot(row[0], row[1])\n    combine(row[1], row[1], row[0], 1.0, -skew[0])\n\n    // Now, compute Y scale and normalize 2nd row.\n    scale[1] = vec3.length(row[1])\n    vec3.normalize(row[1], row[1])\n    skew[0] /= scale[1]\n\n    // Compute XZ and YZ shears, orthogonalize 3rd row\n    skew[1] = vec3.dot(row[0], row[2])\n    combine(row[2], row[2], row[0], 1.0, -skew[1])\n    skew[2] = vec3.dot(row[1], row[2])\n    combine(row[2], row[2], row[1], 1.0, -skew[2])\n\n    // Next, get Z scale and normalize 3rd row.\n    scale[2] = vec3.length(row[2])\n    vec3.normalize(row[2], row[2])\n    skew[1] /= scale[2]\n    skew[2] /= scale[2]\n\n\n    // At this point, the matrix (in rows) is orthonormal.\n    // Check for a coordinate system flip.  If the determinant\n    // is -1, then negate the matrix and the scaling factors.\n    vec3.cross(pdum3, row[1], row[2])\n    if (vec3.dot(row[0], pdum3) < 0) {\n        for (var i = 0; i < 3; i++) {\n            scale[i] *= -1;\n            row[i][0] *= -1\n            row[i][1] *= -1\n            row[i][2] *= -1\n        }\n    }\n\n    // Now, get the rotations out\n    quaternion[0] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0))\n    quaternion[1] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0))\n    quaternion[2] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0))\n    quaternion[3] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0))\n\n    if (row[2][1] > row[1][2])\n        quaternion[0] = -quaternion[0]\n    if (row[0][2] > row[2][0])\n        quaternion[1] = -quaternion[1]\n    if (row[1][0] > row[0][1])\n        quaternion[2] = -quaternion[2]\n    return true\n}\n\n//will be replaced by gl-vec4 eventually\nfunction vec4multMat4(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n}\n\n//gets upper-left of a 4x4 matrix into a 3x3 of vectors\nfunction mat3from4(out, mat4x4) {\n    out[0][0] = mat4x4[0]\n    out[0][1] = mat4x4[1]\n    out[0][2] = mat4x4[2]\n    \n    out[1][0] = mat4x4[4]\n    out[1][1] = mat4x4[5]\n    out[1][2] = mat4x4[6]\n\n    out[2][0] = mat4x4[8]\n    out[2][1] = mat4x4[9]\n    out[2][2] = mat4x4[10]\n}\n\nfunction combine(out, a, b, scale1, scale2) {\n    out[0] = a[0] * scale1 + b[0] * scale2\n    out[1] = a[1] * scale1 + b[1] * scale2\n    out[2] = a[2] * scale1 + b[2] * scale2\n}","module.exports = function normalize(out, mat) {\n    var m44 = mat[15]\n    // Cannot normalize.\n    if (m44 === 0) \n        return false\n    var scale = 1 / m44\n    for (var i=0; i<16; i++)\n        out[i] = mat[i] * scale\n    return true\n}","var lerp = require('gl-vec3/lerp')\n\nvar recompose = require('mat4-recompose')\nvar decompose = require('mat4-decompose')\nvar determinant = require('gl-mat4/determinant')\nvar slerp = require('quat-slerp')\n\nvar state0 = state()\nvar state1 = state()\nvar tmp = state()\n\nmodule.exports = interpolate\nfunction interpolate(out, start, end, alpha) {\n    if (determinant(start) === 0 || determinant(end) === 0)\n        return false\n\n    //decompose the start and end matrices into individual components\n    var r0 = decompose(start, state0.translate, state0.scale, state0.skew, state0.perspective, state0.quaternion)\n    var r1 = decompose(end, state1.translate, state1.scale, state1.skew, state1.perspective, state1.quaternion)\n    if (!r0 || !r1)\n        return false    \n\n\n    //now lerp/slerp the start and end components into a temporary     lerp(tmptranslate, state0.translate, state1.translate, alpha)\n    lerp(tmp.translate, state0.translate, state1.translate, alpha)\n    lerp(tmp.skew, state0.skew, state1.skew, alpha)\n    lerp(tmp.scale, state0.scale, state1.scale, alpha)\n    lerp(tmp.perspective, state0.perspective, state1.perspective, alpha)\n    slerp(tmp.quaternion, state0.quaternion, state1.quaternion, alpha)\n\n    //and recompose into our 'out' matrix\n    recompose(out, tmp.translate, tmp.scale, tmp.skew, tmp.perspective, tmp.quaternion)\n    return true\n}\n\nfunction state() {\n    return {\n        translate: vec3(),\n        scale: vec3(1),\n        skew: vec3(),\n        perspective: vec4(),\n        quaternion: vec4()\n    }\n}\n\nfunction vec3(n) {\n    return [n||0,n||0,n||0]\n}\n\nfunction vec4() {\n    return [0,0,0,1]\n}","/*\nInput:  translation ; a 3 component vector\n        scale       ; a 3 component vector\n        skew        ; skew factors XY,XZ,YZ represented as a 3 component vector\n        perspective ; a 4 component vector\n        quaternion  ; a 4 component vector\nOutput: matrix      ; a 4x4 matrix\n\nFrom: http://www.w3.org/TR/css3-transforms/#recomposing-to-a-3d-matrix\n*/\n\nvar mat4 = {\n    identity: require('gl-mat4/identity'),\n    translate: require('gl-mat4/translate'),\n    multiply: require('gl-mat4/multiply'),\n    create: require('gl-mat4/create'),\n    scale: require('gl-mat4/scale'),\n    fromRotationTranslation: require('gl-mat4/fromRotationTranslation')\n}\n\nvar rotationMatrix = mat4.create()\nvar temp = mat4.create()\n\nmodule.exports = function recomposeMat4(matrix, translation, scale, skew, perspective, quaternion) {\n    mat4.identity(matrix)\n\n    //apply translation & rotation\n    mat4.fromRotationTranslation(matrix, quaternion, translation)\n\n    //apply perspective\n    matrix[3] = perspective[0]\n    matrix[7] = perspective[1]\n    matrix[11] = perspective[2]\n    matrix[15] = perspective[3]\n        \n    // apply skew\n    // temp is a identity 4x4 matrix initially\n    mat4.identity(temp)\n\n    if (skew[2] !== 0) {\n        temp[9] = skew[2]\n        mat4.multiply(matrix, matrix, temp)\n    }\n\n    if (skew[1] !== 0) {\n        temp[9] = 0\n        temp[8] = skew[1]\n        mat4.multiply(matrix, matrix, temp)\n    }\n\n    if (skew[0] !== 0) {\n        temp[8] = 0\n        temp[4] = skew[0]\n        mat4.multiply(matrix, matrix, temp)\n    }\n\n    //apply scale\n    mat4.scale(matrix, matrix, scale)\n    return matrix\n}","'use strict'\n\nvar bsearch   = require('binary-search-bounds')\nvar m4interp  = require('mat4-interpolate')\nvar invert44  = require('gl-mat4/invert')\nvar rotateX   = require('gl-mat4/rotateX')\nvar rotateY   = require('gl-mat4/rotateY')\nvar rotateZ   = require('gl-mat4/rotateZ')\nvar lookAt    = require('gl-mat4/lookAt')\nvar translate = require('gl-mat4/translate')\nvar scale     = require('gl-mat4/scale')\nvar normalize = require('gl-vec3/normalize')\n\nvar DEFAULT_CENTER = [0,0,0]\n\nmodule.exports = createMatrixCameraController\n\nfunction MatrixCameraController(initialMatrix) {\n  this._components    = initialMatrix.slice()\n  this._time          = [0]\n  this.prevMatrix     = initialMatrix.slice()\n  this.nextMatrix     = initialMatrix.slice()\n  this.computedMatrix = initialMatrix.slice()\n  this.computedInverse = initialMatrix.slice()\n  this.computedEye    = [0,0,0]\n  this.computedUp     = [0,0,0]\n  this.computedCenter = [0,0,0]\n  this.computedRadius = [0]\n  this._limits        = [-Infinity, Infinity]\n}\n\nvar proto = MatrixCameraController.prototype\n\nproto.recalcMatrix = function(t) {\n  var time = this._time\n  var tidx = bsearch.le(time, t)\n  var mat = this.computedMatrix\n  if(tidx < 0) {\n    return\n  }\n  var comps = this._components\n  if(tidx === time.length-1) {\n    var ptr = 16*tidx\n    for(var i=0; i<16; ++i) {\n      mat[i] = comps[ptr++]\n    }\n  } else {\n    var dt = (time[tidx+1] - time[tidx])\n    var ptr = 16*tidx\n    var prev = this.prevMatrix\n    var allEqual = true\n    for(var i=0; i<16; ++i) {\n      prev[i] = comps[ptr++]\n    }\n    var next = this.nextMatrix\n    for(var i=0; i<16; ++i) {\n      next[i] = comps[ptr++]\n      allEqual = allEqual && (prev[i] === next[i])\n    }\n    if(dt < 1e-6 || allEqual) {\n      for(var i=0; i<16; ++i) {\n        mat[i] = prev[i]\n      }\n    } else {\n      m4interp(mat, prev, next, (t - time[tidx])/dt)\n    }\n  }\n\n  var up = this.computedUp\n  up[0] = mat[1]\n  up[1] = mat[5]\n  up[2] = mat[9]\n  normalize(up, up)\n\n  var imat = this.computedInverse\n  invert44(imat, mat)\n  var eye = this.computedEye\n  var w = imat[15]\n  eye[0] = imat[12]/w\n  eye[1] = imat[13]/w\n  eye[2] = imat[14]/w\n\n  var center = this.computedCenter\n  var radius = Math.exp(this.computedRadius[0])\n  for(var i=0; i<3; ++i) {\n    center[i] = eye[i] - mat[2+4*i] * radius\n  }\n}\n\nproto.idle = function(t) {\n  if(t < this.lastT()) {\n    return\n  }\n  var mc = this._components\n  var ptr = mc.length-16\n  for(var i=0; i<16; ++i) {\n    mc.push(mc[ptr++])\n  }\n  this._time.push(t)\n}\n\nproto.flush = function(t) {\n  var idx = bsearch.gt(this._time, t) - 2\n  if(idx < 0) {\n    return\n  }\n  this._time.splice(0, idx)\n  this._components.splice(0, 16*idx)\n}\n\nproto.lastT = function() {\n  return this._time[this._time.length-1]\n}\n\nproto.lookAt = function(t, eye, center, up) {\n  this.recalcMatrix(t)\n  eye    = eye || this.computedEye\n  center = center || DEFAULT_CENTER\n  up     = up || this.computedUp\n  this.setMatrix(t, lookAt(this.computedMatrix, eye, center, up))\n  var d2 = 0.0\n  for(var i=0; i<3; ++i) {\n    d2 += Math.pow(center[i] - eye[i], 2)\n  }\n  d2 = Math.log(Math.sqrt(d2))\n  this.computedRadius[0] = d2\n}\n\nproto.rotate = function(t, yaw, pitch, roll) {\n  this.recalcMatrix(t)\n  var mat = this.computedInverse\n  if(yaw)   rotateY(mat, mat, yaw)\n  if(pitch) rotateX(mat, mat, pitch)\n  if(roll)  rotateZ(mat, mat, roll)\n  this.setMatrix(t, invert44(this.computedMatrix, mat))\n}\n\nvar tvec = [0,0,0]\n\nproto.pan = function(t, dx, dy, dz) {\n  tvec[0] = -(dx || 0.0)\n  tvec[1] = -(dy || 0.0)\n  tvec[2] = -(dz || 0.0)\n  this.recalcMatrix(t)\n  var mat = this.computedInverse\n  translate(mat, mat, tvec)\n  this.setMatrix(t, invert44(mat, mat))\n}\n\nproto.translate = function(t, dx, dy, dz) {\n  tvec[0] = dx || 0.0\n  tvec[1] = dy || 0.0\n  tvec[2] = dz || 0.0\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n  translate(mat, mat, tvec)\n  this.setMatrix(t, mat)\n}\n\nproto.setMatrix = function(t, mat) {\n  if(t < this.lastT()) {\n    return\n  }\n  this._time.push(t)\n  for(var i=0; i<16; ++i) {\n    this._components.push(mat[i])\n  }\n}\n\nproto.setDistance = function(t, d) {\n  this.computedRadius[0] = d\n}\n\nproto.setDistanceLimits = function(a,b) {\n  var lim = this._limits\n  lim[0] = a\n  lim[1] = b\n}\n\nproto.getDistanceLimits = function(out) {\n  var lim = this._limits\n  if(out) {\n    out[0] = lim[0]\n    out[1] = lim[1]\n    return out\n  }\n  return lim\n}\n\nfunction createMatrixCameraController(options) {\n  options = options || {}\n  var matrix = options.matrix || \n              [1,0,0,0,\n               0,1,0,0,\n               0,0,1,0,\n               0,0,0,1]\n  return new MatrixCameraController(matrix)\n}\n","'use strict'\n\nmodule.exports = mouseListen\n\nvar mouse = require('mouse-event')\n\nfunction mouseListen (element, callback) {\n  if (!callback) {\n    callback = element\n    element = window\n  }\n\n  var buttonState = 0\n  var x = 0\n  var y = 0\n  var mods = {\n    shift: false,\n    alt: false,\n    control: false,\n    meta: false\n  }\n  var attached = false\n\n  function updateMods (ev) {\n    var changed = false\n    if ('altKey' in ev) {\n      changed = changed || ev.altKey !== mods.alt\n      mods.alt = !!ev.altKey\n    }\n    if ('shiftKey' in ev) {\n      changed = changed || ev.shiftKey !== mods.shift\n      mods.shift = !!ev.shiftKey\n    }\n    if ('ctrlKey' in ev) {\n      changed = changed || ev.ctrlKey !== mods.control\n      mods.control = !!ev.ctrlKey\n    }\n    if ('metaKey' in ev) {\n      changed = changed || ev.metaKey !== mods.meta\n      mods.meta = !!ev.metaKey\n    }\n    return changed\n  }\n\n  function handleEvent (nextButtons, ev) {\n    var nextX = mouse.x(ev)\n    var nextY = mouse.y(ev)\n    if ('buttons' in ev) {\n      nextButtons = ev.buttons | 0\n    }\n    if (nextButtons !== buttonState ||\n      nextX !== x ||\n      nextY !== y ||\n      updateMods(ev)) {\n      buttonState = nextButtons | 0\n      x = nextX || 0\n      y = nextY || 0\n      callback && callback(buttonState, x, y, mods)\n    }\n  }\n\n  function clearState (ev) {\n    handleEvent(0, ev)\n  }\n\n  function handleBlur () {\n    if (buttonState ||\n      x ||\n      y ||\n      mods.shift ||\n      mods.alt ||\n      mods.meta ||\n      mods.control) {\n      x = y = 0\n      buttonState = 0\n      mods.shift = mods.alt = mods.control = mods.meta = false\n      callback && callback(0, 0, 0, mods)\n    }\n  }\n\n  function handleMods (ev) {\n    if (updateMods(ev)) {\n      callback && callback(buttonState, x, y, mods)\n    }\n  }\n\n  function handleMouseMove (ev) {\n    if (mouse.buttons(ev) === 0) {\n      handleEvent(0, ev)\n    } else {\n      handleEvent(buttonState, ev)\n    }\n  }\n\n  function handleMouseDown (ev) {\n    handleEvent(buttonState | mouse.buttons(ev), ev)\n  }\n\n  function handleMouseUp (ev) {\n    handleEvent(buttonState & ~mouse.buttons(ev), ev)\n  }\n\n  function attachListeners () {\n    if (attached) {\n      return\n    }\n    attached = true\n\n    element.addEventListener('mousemove', handleMouseMove)\n\n    element.addEventListener('mousedown', handleMouseDown)\n\n    element.addEventListener('mouseup', handleMouseUp)\n\n    element.addEventListener('mouseleave', clearState)\n    element.addEventListener('mouseenter', clearState)\n    element.addEventListener('mouseout', clearState)\n    element.addEventListener('mouseover', clearState)\n\n    element.addEventListener('blur', handleBlur)\n\n    element.addEventListener('keyup', handleMods)\n    element.addEventListener('keydown', handleMods)\n    element.addEventListener('keypress', handleMods)\n\n    if (element !== window) {\n      window.addEventListener('blur', handleBlur)\n\n      window.addEventListener('keyup', handleMods)\n      window.addEventListener('keydown', handleMods)\n      window.addEventListener('keypress', handleMods)\n    }\n  }\n\n  function detachListeners () {\n    if (!attached) {\n      return\n    }\n    attached = false\n\n    element.removeEventListener('mousemove', handleMouseMove)\n\n    element.removeEventListener('mousedown', handleMouseDown)\n\n    element.removeEventListener('mouseup', handleMouseUp)\n\n    element.removeEventListener('mouseleave', clearState)\n    element.removeEventListener('mouseenter', clearState)\n    element.removeEventListener('mouseout', clearState)\n    element.removeEventListener('mouseover', clearState)\n\n    element.removeEventListener('blur', handleBlur)\n\n    element.removeEventListener('keyup', handleMods)\n    element.removeEventListener('keydown', handleMods)\n    element.removeEventListener('keypress', handleMods)\n\n    if (element !== window) {\n      window.removeEventListener('blur', handleBlur)\n\n      window.removeEventListener('keyup', handleMods)\n      window.removeEventListener('keydown', handleMods)\n      window.removeEventListener('keypress', handleMods)\n    }\n  }\n\n  // Attach listeners\n  attachListeners()\n\n  var result = {\n    element: element\n  }\n\n  Object.defineProperties(result, {\n    enabled: {\n      get: function () { return attached },\n      set: function (f) {\n        if (f) {\n          attachListeners()\n        } else {\n          detachListeners()\n        }\n      },\n      enumerable: true\n    },\n    buttons: {\n      get: function () { return buttonState },\n      enumerable: true\n    },\n    x: {\n      get: function () { return x },\n      enumerable: true\n    },\n    y: {\n      get: function () { return y },\n      enumerable: true\n    },\n    mods: {\n      get: function () { return mods },\n      enumerable: true\n    }\n  })\n\n  return result\n}\n","var rootPosition = { left: 0, top: 0 }\n\nmodule.exports = mouseEventOffset\nfunction mouseEventOffset (ev, target, out) {\n  target = target || ev.currentTarget || ev.srcElement\n  if (!Array.isArray(out)) {\n    out = [ 0, 0 ]\n  }\n  var cx = ev.clientX || 0\n  var cy = ev.clientY || 0\n  var rect = getBoundingClientOffset(target)\n  out[0] = cx - rect.left\n  out[1] = cy - rect.top\n  return out\n}\n\nfunction getBoundingClientOffset (element) {\n  if (element === window ||\n      element === document ||\n      element === document.body) {\n    return rootPosition\n  } else {\n    return element.getBoundingClientRect()\n  }\n}\n","'use strict'\n\nfunction mouseButtons(ev) {\n  if(typeof ev === 'object') {\n    if('buttons' in ev) {\n      return ev.buttons\n    } else if('which' in ev) {\n      var b = ev.which\n      if(b === 2) {\n        return 4\n      } else if(b === 3) {\n        return 2\n      } else if(b > 0) {\n        return 1<<(b-1)\n      }\n    } else if('button' in ev) {\n      var b = ev.button\n      if(b === 1) {\n        return 4\n      } else if(b === 2) {\n        return 2\n      } else if(b >= 0) {\n        return 1<<b\n      }\n    }\n  }\n  return 0\n}\nexports.buttons = mouseButtons\n\nfunction mouseElement(ev) {\n  return ev.target || ev.srcElement || window\n}\nexports.element = mouseElement\n\nfunction mouseRelativeX(ev) {\n  if(typeof ev === 'object') {\n    if('offsetX' in ev) {\n      return ev.offsetX\n    }\n    var target = mouseElement(ev)\n    var bounds = target.getBoundingClientRect()\n    return ev.clientX - bounds.left\n  }\n  return 0\n}\nexports.x = mouseRelativeX\n\nfunction mouseRelativeY(ev) {\n  if(typeof ev === 'object') {\n    if('offsetY' in ev) {\n      return ev.offsetY\n    }\n    var target = mouseElement(ev)\n    var bounds = target.getBoundingClientRect()\n    return ev.clientY - bounds.top\n  }\n  return 0\n}\nexports.y = mouseRelativeY\n","'use strict'\n\nvar toPX = require('to-px')\n\nmodule.exports = mouseWheelListen\n\nfunction mouseWheelListen(element, callback, noScroll) {\n  if(typeof element === 'function') {\n    noScroll = !!callback\n    callback = element\n    element = window\n  }\n  var lineHeight = toPX('ex', element)\n  var listener = function(ev) {\n    if(noScroll) {\n      ev.preventDefault()\n    }\n    var dx = ev.deltaX || 0\n    var dy = ev.deltaY || 0\n    var dz = ev.deltaZ || 0\n    var mode = ev.deltaMode\n    var scale = 1\n    switch(mode) {\n      case 1:\n        scale = lineHeight\n      break\n      case 2:\n        scale = window.innerHeight\n      break\n    }\n    dx *= scale\n    dy *= scale\n    dz *= scale\n    if(dx || dy || dz) {\n      return callback(dx, dy, dz, ev)\n    }\n  }\n  element.addEventListener('wheel', listener)\n  return listener\n}\n","'use strict'\n\nmodule.exports = quatFromFrame\n\nfunction quatFromFrame(\n  out,\n  rx, ry, rz,\n  ux, uy, uz,\n  fx, fy, fz) {\n  var tr = rx + uy + fz\n  if(l > 0) {\n    var l = Math.sqrt(tr + 1.0)\n    out[0] = 0.5 * (uz - fy) / l\n    out[1] = 0.5 * (fx - rz) / l\n    out[2] = 0.5 * (ry - uy) / l\n    out[3] = 0.5 * l\n  } else {\n    var tf = Math.max(rx, uy, fz)\n    var l = Math.sqrt(2 * tf - tr + 1.0)\n    if(rx >= tf) {\n      //x y z  order\n      out[0] = 0.5 * l\n      out[1] = 0.5 * (ux + ry) / l\n      out[2] = 0.5 * (fx + rz) / l\n      out[3] = 0.5 * (uz - fy) / l\n    } else if(uy >= tf) {\n      //y z x  order\n      out[0] = 0.5 * (ry + ux) / l\n      out[1] = 0.5 * l\n      out[2] = 0.5 * (fy + uz) / l\n      out[3] = 0.5 * (fx - rz) / l\n    } else {\n      //z x y  order\n      out[0] = 0.5 * (rz + fx) / l\n      out[1] = 0.5 * (uz + fy) / l\n      out[2] = 0.5 * l\n      out[3] = 0.5 * (ry - ux) / l\n    }\n  }\n  return out\n}","'use strict'\n\nmodule.exports = createOrbitController\n\nvar filterVector  = require('filtered-vector')\nvar lookAt        = require('gl-mat4/lookAt')\nvar mat4FromQuat  = require('gl-mat4/fromQuat')\nvar invert44      = require('gl-mat4/invert')\nvar quatFromFrame = require('./lib/quatFromFrame')\n\nfunction len3(x,y,z) {\n  return Math.sqrt(Math.pow(x,2) + Math.pow(y,2) + Math.pow(z,2))\n}\n\nfunction len4(w,x,y,z) {\n  return Math.sqrt(Math.pow(w,2) + Math.pow(x,2) + Math.pow(y,2) + Math.pow(z,2))\n}\n\nfunction normalize4(out, a) {\n  var ax = a[0]\n  var ay = a[1]\n  var az = a[2]\n  var aw = a[3]\n  var al = len4(ax, ay, az, aw)\n  if(al > 1e-6) {\n    out[0] = ax/al\n    out[1] = ay/al\n    out[2] = az/al\n    out[3] = aw/al\n  } else {\n    out[0] = out[1] = out[2] = 0.0\n    out[3] = 1.0\n  }\n}\n\nfunction OrbitCameraController(initQuat, initCenter, initRadius) {\n  this.radius    = filterVector([initRadius])\n  this.center    = filterVector(initCenter)\n  this.rotation  = filterVector(initQuat)\n\n  this.computedRadius   = this.radius.curve(0)\n  this.computedCenter   = this.center.curve(0)\n  this.computedRotation = this.rotation.curve(0)\n  this.computedUp       = [0.1,0,0]\n  this.computedEye      = [0.1,0,0]\n  this.computedMatrix   = [0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\n  this.recalcMatrix(0)\n}\n\nvar proto = OrbitCameraController.prototype\n\nproto.lastT = function() {\n  return Math.max(\n    this.radius.lastT(),\n    this.center.lastT(),\n    this.rotation.lastT())\n}\n\nproto.recalcMatrix = function(t) {\n  this.radius.curve(t)\n  this.center.curve(t)\n  this.rotation.curve(t)\n\n  var quat = this.computedRotation\n  normalize4(quat, quat)\n\n  var mat = this.computedMatrix\n  mat4FromQuat(mat, quat)\n\n  var center = this.computedCenter\n  var eye    = this.computedEye\n  var up     = this.computedUp\n  var radius = Math.exp(this.computedRadius[0])\n\n  eye[0] = center[0] + radius * mat[2]\n  eye[1] = center[1] + radius * mat[6]\n  eye[2] = center[2] + radius * mat[10]\n  up[0] = mat[1]\n  up[1] = mat[5]\n  up[2] = mat[9]\n\n  for(var i=0; i<3; ++i) {\n    var rr = 0.0\n    for(var j=0; j<3; ++j) {\n      rr += mat[i+4*j] * eye[j]\n    }\n    mat[12+i] = -rr\n  }\n}\n\nproto.getMatrix = function(t, result) {\n  this.recalcMatrix(t)\n  var m = this.computedMatrix\n  if(result) {\n    for(var i=0; i<16; ++i) {\n      result[i] = m[i]\n    }\n    return result\n  }\n  return m\n}\n\nproto.idle = function(t) {\n  this.center.idle(t)\n  this.radius.idle(t)\n  this.rotation.idle(t)\n}\n\nproto.flush = function(t) {\n  this.center.flush(t)\n  this.radius.flush(t)\n  this.rotation.flush(t)\n}\n\nproto.pan = function(t, dx, dy, dz) {\n  dx = dx || 0.0\n  dy = dy || 0.0\n  dz = dz || 0.0\n\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n\n  var ux = mat[1]\n  var uy = mat[5]\n  var uz = mat[9]\n  var ul = len3(ux, uy, uz)\n  ux /= ul\n  uy /= ul\n  uz /= ul\n\n  var rx = mat[0]\n  var ry = mat[4]\n  var rz = mat[8]\n  var ru = rx * ux + ry * uy + rz * uz\n  rx -= ux * ru\n  ry -= uy * ru\n  rz -= uz * ru\n  var rl = len3(rx, ry, rz)\n  rx /= rl\n  ry /= rl\n  rz /= rl\n\n  var fx = mat[2]\n  var fy = mat[6]\n  var fz = mat[10]\n  var fu = fx * ux + fy * uy + fz * uz\n  var fr = fx * rx + fy * ry + fz * rz\n  fx -= fu * ux + fr * rx\n  fy -= fu * uy + fr * ry\n  fz -= fu * uz + fr * rz\n  var fl = len3(fx, fy, fz)\n  fx /= fl\n  fy /= fl\n  fz /= fl\n\n  var vx = rx * dx + ux * dy\n  var vy = ry * dx + uy * dy\n  var vz = rz * dx + uz * dy\n\n  this.center.move(t, vx, vy, vz)\n\n  //Update z-component of radius\n  var radius = Math.exp(this.computedRadius[0])\n  radius = Math.max(1e-4, radius + dz)\n  this.radius.set(t, Math.log(radius))\n}\n\nproto.rotate = function(t, dx, dy, dz) {\n  this.recalcMatrix(t)\n\n  dx = dx||0.0\n  dy = dy||0.0\n\n  var mat = this.computedMatrix\n\n  var rx = mat[0]\n  var ry = mat[4]\n  var rz = mat[8]\n\n  var ux = mat[1]\n  var uy = mat[5]\n  var uz = mat[9]\n\n  var fx = mat[2]\n  var fy = mat[6]\n  var fz = mat[10]\n\n  var qx = dx * rx + dy * ux\n  var qy = dx * ry + dy * uy\n  var qz = dx * rz + dy * uz\n\n  var bx = -(fy * qz - fz * qy)\n  var by = -(fz * qx - fx * qz)\n  var bz = -(fx * qy - fy * qx)  \n  var bw = Math.sqrt(Math.max(0.0, 1.0 - Math.pow(bx,2) - Math.pow(by,2) - Math.pow(bz,2)))\n  var bl = len4(bx, by, bz, bw)\n  if(bl > 1e-6) {\n    bx /= bl\n    by /= bl\n    bz /= bl\n    bw /= bl\n  } else {\n    bx = by = bz = 0.0\n    bw = 1.0\n  }\n\n  var rotation = this.computedRotation\n  var ax = rotation[0]\n  var ay = rotation[1]\n  var az = rotation[2]\n  var aw = rotation[3]\n\n  var cx = ax*bw + aw*bx + ay*bz - az*by\n  var cy = ay*bw + aw*by + az*bx - ax*bz\n  var cz = az*bw + aw*bz + ax*by - ay*bx\n  var cw = aw*bw - ax*bx - ay*by - az*bz\n  \n  //Apply roll\n  if(dz) {\n    bx = fx\n    by = fy\n    bz = fz\n    var s = Math.sin(dz) / len3(bx, by, bz)\n    bx *= s\n    by *= s\n    bz *= s\n    bw = Math.cos(dx)\n    cx = cx*bw + cw*bx + cy*bz - cz*by\n    cy = cy*bw + cw*by + cz*bx - cx*bz\n    cz = cz*bw + cw*bz + cx*by - cy*bx\n    cw = cw*bw - cx*bx - cy*by - cz*bz\n  }\n\n  var cl = len4(cx, cy, cz, cw)\n  if(cl > 1e-6) {\n    cx /= cl\n    cy /= cl\n    cz /= cl\n    cw /= cl\n  } else {\n    cx = cy = cz = 0.0\n    cw = 1.0\n  }\n\n  this.rotation.set(t, cx, cy, cz, cw)\n}\n\nproto.lookAt = function(t, eye, center, up) {\n  this.recalcMatrix(t)\n\n  center = center || this.computedCenter\n  eye    = eye    || this.computedEye\n  up     = up     || this.computedUp\n\n  var mat = this.computedMatrix\n  lookAt(mat, eye, center, up)\n\n  var rotation = this.computedRotation\n  quatFromFrame(rotation,\n    mat[0], mat[1], mat[2],\n    mat[4], mat[5], mat[6],\n    mat[8], mat[9], mat[10])\n  normalize4(rotation, rotation)\n  this.rotation.set(t, rotation[0], rotation[1], rotation[2], rotation[3])\n\n  var fl = 0.0\n  for(var i=0; i<3; ++i) {\n    fl += Math.pow(center[i] - eye[i], 2)\n  }\n  this.radius.set(t, 0.5 * Math.log(Math.max(fl, 1e-6)))\n\n  this.center.set(t, center[0], center[1], center[2])\n}\n\nproto.translate = function(t, dx, dy, dz) {\n  this.center.move(t,\n    dx||0.0,\n    dy||0.0,\n    dz||0.0)\n}\n\nproto.setMatrix = function(t, matrix) {\n\n  var rotation = this.computedRotation\n  quatFromFrame(rotation,\n    matrix[0], matrix[1], matrix[2],\n    matrix[4], matrix[5], matrix[6],\n    matrix[8], matrix[9], matrix[10])\n  normalize4(rotation, rotation)\n  this.rotation.set(t, rotation[0], rotation[1], rotation[2], rotation[3])\n\n  var mat = this.computedMatrix\n  invert44(mat, matrix)\n  var w = mat[15]\n  if(Math.abs(w) > 1e-6) {\n    var cx = mat[12]/w\n    var cy = mat[13]/w\n    var cz = mat[14]/w\n\n    this.recalcMatrix(t)  \n    var r = Math.exp(this.computedRadius[0])\n    this.center.set(t, cx-mat[2]*r, cy-mat[6]*r, cz-mat[10]*r)\n    this.radius.idle(t)\n  } else {\n    this.center.idle(t)\n    this.radius.idle(t)\n  }\n}\n\nproto.setDistance = function(t, d) {\n  if(d > 0) {\n    this.radius.set(t, Math.log(d))\n  }\n}\n\nproto.setDistanceLimits = function(lo, hi) {\n  if(lo > 0) {\n    lo = Math.log(lo)\n  } else {\n    lo = -Infinity    \n  }\n  if(hi > 0) {\n    hi = Math.log(hi)\n  } else {\n    hi = Infinity\n  }\n  hi = Math.max(hi, lo)\n  this.radius.bounds[0][0] = lo\n  this.radius.bounds[1][0] = hi\n}\n\nproto.getDistanceLimits = function(out) {\n  var bounds = this.radius.bounds\n  if(out) {\n    out[0] = Math.exp(bounds[0][0])\n    out[1] = Math.exp(bounds[1][0])\n    return out\n  }\n  return [ Math.exp(bounds[0][0]), Math.exp(bounds[1][0]) ]\n}\n\nproto.toJSON = function() {\n  this.recalcMatrix(this.lastT())\n  return {\n    center:   this.computedCenter.slice(),\n    rotation: this.computedRotation.slice(),\n    distance: Math.log(this.computedRadius[0]),\n    zoomMin:  this.radius.bounds[0][0],\n    zoomMax:  this.radius.bounds[1][0]\n  }\n}\n\nproto.fromJSON = function(options) {\n  var t = this.lastT()\n  var c = options.center\n  if(c) {\n    this.center.set(t, c[0], c[1], c[2])\n  }\n  var r = options.rotation\n  if(r) {\n    this.rotation.set(t, r[0], r[1], r[2], r[3])\n  }\n  var d = options.distance\n  if(d && d > 0) {\n    this.radius.set(t, Math.log(d))\n  }\n  this.setDistanceLimits(options.zoomMin, options.zoomMax)\n}\n\nfunction createOrbitController(options) {\n  options = options || {}\n  var center   = options.center   || [0,0,0]\n  var rotation = options.rotation || [0,0,0,1]\n  var radius   = options.radius   || 1.0\n\n  center = [].slice.call(center, 0, 3)\n  rotation = [].slice.call(rotation, 0, 4)\n  normalize4(rotation, rotation)\n\n  var result = new OrbitCameraController(\n    rotation,\n    center,\n    Math.log(radius))\n\n  result.setDistanceLimits(options.zoomMin, options.zoomMax)\n\n  if('eye' in options || 'up' in options) {\n    result.lookAt(0, options.eye, options.center, options.up)\n  }\n\n  return result\n}","module.exports = function parseUnit(str, out) {\n    if (!out)\n        out = [ 0, '' ]\n\n    str = String(str)\n    var num = parseFloat(str, 10)\n    out[0] = num\n    out[1] = str.match(/[\\d.\\-\\+]*\\s*(.*)/)[1] || ''\n    return out\n}","module.exports = require('gl-quat/slerp')","module.exports =\n  global.performance &&\n  global.performance.now ? function now() {\n    return performance.now()\n  } : Date.now || function now() {\n    return +new Date\n  }\n","'use strict'\n\nvar parseUnit = require('parse-unit')\n\nmodule.exports = toPX\n\nvar PIXELS_PER_INCH = getSizeBrutal('in', document.body) // 96\n\n\nfunction getPropertyInPX(element, prop) {\n  var parts = parseUnit(getComputedStyle(element).getPropertyValue(prop))\n  return parts[0] * toPX(parts[1], element)\n}\n\n//This brutal hack is needed\nfunction getSizeBrutal(unit, element) {\n  var testDIV = document.createElement('div')\n  testDIV.style['height'] = '128' + unit\n  element.appendChild(testDIV)\n  var size = getPropertyInPX(testDIV, 'height') / 128\n  element.removeChild(testDIV)\n  return size\n}\n\nfunction toPX(str, element) {\n  if (!str) return null\n\n  element = element || document.body\n  str = (str + '' || 'px').trim().toLowerCase()\n  if(element === window || element === document) {\n    element = document.body\n  }\n\n  switch(str) {\n    case '%':  //Ambiguous, not sure if we should use width or height\n      return element.clientHeight / 100.0\n    case 'ch':\n    case 'ex':\n      return getSizeBrutal(str, element)\n    case 'em':\n      return getPropertyInPX(element, 'font-size')\n    case 'rem':\n      return getPropertyInPX(document.body, 'font-size')\n    case 'vw':\n      return window.innerWidth/100\n    case 'vh':\n      return window.innerHeight/100\n    case 'vmin':\n      return Math.min(window.innerWidth, window.innerHeight) / 100\n    case 'vmax':\n      return Math.max(window.innerWidth, window.innerHeight) / 100\n    case 'in':\n      return PIXELS_PER_INCH\n    case 'cm':\n      return PIXELS_PER_INCH / 2.54\n    case 'mm':\n      return PIXELS_PER_INCH / 25.4\n    case 'pt':\n      return PIXELS_PER_INCH / 72\n    case 'pc':\n      return PIXELS_PER_INCH / 6\n    case 'px':\n      return 1\n  }\n\n  // detect number of units\n  var parts = parseUnit(str)\n  if (!isNaN(parts[0]) && parts[1]) {\n    var px = toPX(parts[1], element)\n    return typeof px === 'number' ? parts[0] * px : null\n  }\n\n  return null\n}\n","\r\nimport { vec3, mat4 } from 'gl-matrix';\r\n\r\nexport const CreateAnimation = (draw:any, \r\n    rotation:vec3 = vec3.fromValues(0,0,0), isAnimation = true) =>\r\n{\r\n    function step()\r\n    {\r\n        if(isAnimation)\r\n        {\r\n            rotation[0] += 0.01;\r\n            rotation[1] += 0.01;\r\n            rotation[2] += 0.01;\r\n        }\r\n        else\r\n        {\r\n            rotation = [0, 0, 0];\r\n        }\r\n        draw();\r\n        requestAnimationFrame(step);\r\n    }\r\n    requestAnimationFrame(step);\r\n}\r\n\r\nexport const CreateTransforms = (modelMat:mat4, translation:vec3 = [0, 0, 0],\r\n    rotation:vec3 = [0, 0, 0], scaling:vec3 = [1, 1, 1]) =>\r\n{\r\n    const rotateXMat = mat4.create();\r\n    const rotateYMat = mat4.create();\r\n    const rotateZMat = mat4.create();\r\n    const translateMat = mat4.create();\r\n    const scaleMat = mat4.create();\r\n\r\n    // Perform individual transformations\r\n    mat4.fromTranslation(translateMat, translation);\r\n    mat4.fromXRotation(rotateXMat, rotation[0]);\r\n    mat4.fromYRotation(rotateYMat, rotation[1]);\r\n    mat4.fromZRotation(rotateZMat, rotation[2]);\r\n    mat4.fromScaling(scaleMat, scaling);\r\n\r\n    // Combine all transformation matrices together to form a final\r\n    // transformation matrix: the model matrix\r\n    mat4.multiply(modelMat, rotateXMat, scaleMat);\r\n    mat4.multiply(modelMat, rotateYMat, modelMat);\r\n    mat4.multiply(modelMat, rotateZMat, modelMat);\r\n    mat4.multiply(modelMat, translateMat, modelMat);\r\n}\r\n\r\nexport const CreateViewProjection = (aspectRatio = 1.0, \r\n    cameraPosition:vec3 = [2, 2, 4], lookDirection:vec3 = [0, 0, 0],\r\n    upDirection:vec3 = [0, 1, 0]) =>\r\n{\r\n    const viewMatrix = mat4.create();\r\n    const projectionMatrix = mat4.create();\r\n    const viewProjectionMatrix = mat4.create();\r\n\r\n    mat4.perspective(projectionMatrix, 2*Math.PI/5, aspectRatio, 0.1, 100.0);\r\n    mat4.lookAt(viewMatrix, cameraPosition, lookDirection, upDirection);\r\n    mat4.multiply(viewProjectionMatrix, projectionMatrix, viewMatrix);\r\n\r\n    const cameraOption = \r\n    {\r\n        eye: cameraPosition,\r\n        center: lookDirection,\r\n        zoomMax: 100,\r\n        zoomSpeed: 2\r\n    }\r\n\r\n    return { \r\n        viewMatrix, \r\n        projectionMatrix, \r\n        viewProjectionMatrix, \r\n        cameraOption \r\n    };\r\n}\r\n\r\nexport const CreateGPUBufferUint = (device:GPUDevice, data:Uint32Array,\r\n    usageFlag:GPUBufferUsageFlags = GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST) =>\r\n{\r\n    const buffer = device.createBuffer({\r\n        size: data.byteLength,\r\n        usage: usageFlag,\r\n        mappedAtCreation: true\r\n    });\r\n    new Uint32Array(buffer.getMappedRange()).set(data);\r\n    buffer.unmap();\r\n\r\n    return buffer;\r\n}\r\n\r\nexport const CreateGPUBuffer = (device:GPUDevice, data:Float32Array,\r\n    usageFlag:GPUBufferUsageFlags = GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST) => \r\n{\r\n    const buffer = device.createBuffer({\r\n        size: data.byteLength,\r\n        usage: usageFlag,\r\n        mappedAtCreation: true\r\n    });\r\n    new Float32Array(buffer.getMappedRange()).set(data);\r\n    buffer.unmap();\r\n\r\n    return buffer;\r\n}\r\n\r\nexport const InitGPU = async () => {\r\n    const checkgpu = CheckWebGPU();\r\n    if(checkgpu.includes('Your current browser does not support WebGPU!'))\r\n    {\r\n        console.log(checkgpu);\r\n        throw('Your current browser does not support WebGPU');\r\n    }\r\n\r\n    const canvas = document.getElementById('canvas-webgpu') as HTMLCanvasElement;\r\n    const adapter = await navigator.gpu?.requestAdapter() as GPUAdapter;\r\n    const device = await adapter?.requestDevice() as GPUDevice;\r\n    const context = canvas.getContext('webgpu') as unknown as GPUCanvasContext;\r\n\r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n    const size = [\r\n        canvas.clientWidth * devicePixelRatio,\r\n        canvas.clientHeight * devicePixelRatio\r\n    ];\r\n    const format = context.getPreferredFormat(adapter!);\r\n    \r\n    context.configure({\r\n        device: device,\r\n        format: format,\r\n        size: size\r\n    });\r\n\r\n    return { device, canvas, format, context };\r\n}\r\n\r\nexport const CheckWebGPU = () => {\r\n    let result = 'Great, your current browser supports WebGPU!';\r\n    if(!navigator.gpu) {\r\n        result = `Your current browser does not support WebGPU! \r\n        Make sure you are on a system with WebGPU enabled. Currently,\r\n        SPIR-WebGPU is only supported in <a href=\"https://www.google.com/chrome/canary\">Chrome canary</a>\r\n        with the flag \"enable-unsafe-webgpu\" enabled. See the\r\n        <a href=\"https://github.com/gpuweb/gpuweb/wiki/Implementation-Status\">\r\n        Implementation Status</a> page for more details.`;\r\n    }\r\n\r\n    return result;\r\n}","import { InitGPU, CreateGPUBuffer, CreateTransforms, CreateViewProjection, CreateAnimation } from './helper';\r\nimport { Shaders, LightInputs } from './shaders';\r\nimport { vec3, mat4 } from 'gl-matrix';\r\nconst createCamera = require('3d-view-controls');\r\n\r\nexport const CreateShapeWithLight = async (vertexData: Float32Array, normalData: Float32Array, \r\n    lightInputs:LightInputs, isAnimation = true) => \r\n{\r\n    const gpu = await InitGPU();\r\n    const device = gpu.device;\r\n\r\n    // Create vertex buffers\r\n    const numberOfVertices = vertexData.length/3;\r\n    const vertexBuffer = CreateGPUBuffer(device, vertexData);\r\n    const normalBuffer = CreateGPUBuffer(device, normalData);\r\n \r\n    const shader = Shaders(lightInputs);\r\n    const pipeline = device.createRenderPipeline({\r\n        vertex: {\r\n            module: device.createShaderModule({                    \r\n                code: shader.vertex\r\n            }),\r\n            entryPoint: \"main\",\r\n            buffers:[\r\n                {\r\n                    arrayStride: 12,\r\n                    attributes: [{\r\n                        shaderLocation: 0,\r\n                        format: \"float32x3\",\r\n                        offset: 0\r\n                    }]\r\n                },\r\n                {\r\n                    arrayStride: 12,\r\n                    attributes: [{\r\n                        shaderLocation: 1,\r\n                        format: \"float32x3\",\r\n                        offset: 0\r\n                    }]\r\n                }\r\n            ]\r\n        },\r\n        fragment: {\r\n            module: device.createShaderModule({                    \r\n                code: shader.fragment\r\n            }),\r\n            entryPoint: \"main\",\r\n            targets: [\r\n                {\r\n                    format: gpu.format as GPUTextureFormat\r\n                }\r\n            ]\r\n        },\r\n        primitive:{\r\n            topology: \"triangle-list\",\r\n        },\r\n        depthStencil:{\r\n            format: \"depth24plus\",\r\n            depthWriteEnabled: true,\r\n            depthCompare: \"less\"\r\n        }\r\n    });\r\n\r\n    // Create uniform data\r\n    const normalMatrix = mat4.create();\r\n    const modelMatrix = mat4.create();\r\n    let vMatrix = mat4.create();\r\n    let vpMatrix = mat4.create();\r\n    const vp = CreateViewProjection(gpu.canvas.width/gpu.canvas.height);\r\n    vpMatrix = vp.viewProjectionMatrix;\r\n\r\n    // Add rotation and camera:\r\n    let rotation = vec3.fromValues(0, 0, 0);       \r\n    var camera = createCamera(gpu.canvas, vp.cameraOption);\r\n    let eyePosition = new Float32Array(vp.cameraOption.eye);\r\n    let lightPosition = eyePosition;\r\n\r\n    // Create uniform buffer and layout\r\n    const vertexUniformBuffer = device.createBuffer({\r\n        size: 192,\r\n        usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST\r\n    });\r\n\r\n    const fragmentUniformBuffer = device.createBuffer({\r\n        size: 32,\r\n        usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST\r\n    });\r\n\r\n    if(isAnimation){\r\n        device.queue.writeBuffer(vertexUniformBuffer, 0, vp.viewProjectionMatrix as ArrayBuffer);\r\n        device.queue.writeBuffer(fragmentUniformBuffer, 0, lightPosition);\r\n        device.queue.writeBuffer(fragmentUniformBuffer, 16, eyePosition);\r\n    }\r\n\r\n    const uniformBindGroup = device.createBindGroup({\r\n        layout: pipeline.getBindGroupLayout(0),\r\n        entries: [\r\n            {\r\n                binding: 0,\r\n                resource: {\r\n                    buffer: vertexUniformBuffer,\r\n                    offset: 0,\r\n                    size: 192\r\n                }\r\n            },\r\n            {\r\n                binding: 1,\r\n                resource: {\r\n                    buffer: fragmentUniformBuffer,\r\n                    offset: 0,\r\n                    size: 32\r\n                }\r\n            }                \r\n        ]\r\n    });\r\n\r\n    let textureView = gpu.context.getCurrentTexture().createView();\r\n    const depthTexture = device.createTexture({\r\n        size: [gpu.canvas.width, gpu.canvas.height, 1],\r\n        format: \"depth24plus\",\r\n        usage: GPUTextureUsage.RENDER_ATTACHMENT\r\n    });\r\n\r\n    const renderPassDescription = {\r\n        colorAttachments: [{\r\n            view: textureView,\r\n            loadValue: { r: 0.2, g: 0.2, b: 0.2, a: 1.0 }, //background color\r\n            storeOp: 'store'\r\n        }],\r\n        depthStencilAttachment: {\r\n            view: depthTexture.createView(),\r\n            depthLoadValue: 1.0,\r\n            depthStoreOp: \"store\",\r\n            stencilLoadValue: 0,\r\n            stencilStoreOp: \"store\"\r\n        }\r\n    };\r\n    \r\n    function draw() {\r\n        if(!isAnimation){\r\n            if(camera.tick()){\r\n                const pMatrix = vp.projectionMatrix;\r\n                vMatrix = camera.matrix;\r\n                mat4.multiply(vpMatrix, pMatrix, vMatrix);\r\n\r\n                eyePosition = new Float32Array(camera.eye.flat());\r\n                lightPosition = eyePosition;\r\n                device.queue.writeBuffer(vertexUniformBuffer, 0, vpMatrix as ArrayBuffer);\r\n                device.queue.writeBuffer(fragmentUniformBuffer, 0, eyePosition);\r\n                device.queue.writeBuffer(fragmentUniformBuffer, 16, lightPosition);\r\n            }\r\n        }\r\n\r\n        CreateTransforms(modelMatrix,[0,0,0], rotation);\r\n        mat4.invert(normalMatrix, modelMatrix);\r\n        mat4.transpose(normalMatrix, normalMatrix);\r\n        device.queue.writeBuffer(vertexUniformBuffer, 64, modelMatrix as ArrayBuffer);\r\n        device.queue.writeBuffer(vertexUniformBuffer, 128, normalMatrix as ArrayBuffer);\r\n\r\n        textureView = gpu.context.getCurrentTexture().createView();\r\n        renderPassDescription.colorAttachments[0].view = textureView;\r\n        const commandEncoder = device.createCommandEncoder();\r\n        const renderPass = commandEncoder.beginRenderPass(renderPassDescription as GPURenderPassDescriptor);\r\n\r\n        renderPass.setPipeline(pipeline);\r\n        renderPass.setVertexBuffer(0, vertexBuffer);\r\n        renderPass.setVertexBuffer(1, normalBuffer);\r\n        renderPass.setBindGroup(0, uniformBindGroup);       \r\n        renderPass.draw(numberOfVertices);\r\n        renderPass.endPass();\r\n\r\n        device.queue.submit([commandEncoder.finish()]);\r\n    }\r\n\r\n    CreateAnimation(draw, rotation, isAnimation);\r\n}","import { vec3 } from 'gl-matrix';\r\n\r\nexport const TorusPosition = (R:number, r:number, u:number, v:number, center:vec3 = [0,0,0]) =>\r\n{\r\n    let snu = Math.sin(u * Math.PI / 180);\r\n    let cnu = Math.cos(u * Math.PI / 180);\r\n    let snv = Math.sin(v * Math.PI / 180);\r\n    let cnv = Math.cos(v * Math.PI / 180);\r\n\r\n    return vec3.fromValues(\r\n        (R + r*cnv)*cnu + center[0],\r\n        r*snv + center[1],\r\n        -(R + r*cnv)*snu + center[2]\r\n    );\r\n}\r\n\r\nexport const ConePosition = (radius:number, theta:number, y:number, center:vec3 = [0,0,0]) =>\r\n{\r\n    let sn = Math.sin(theta * Math.PI / 180);\r\n    let cn = Math.cos(theta * Math.PI / 180);\r\n\r\n    return vec3.fromValues(\r\n        radius * cn + center[0], \r\n        y + center[1],\r\n        -radius * sn + center[2]\r\n    );\r\n}\r\n\r\nexport const CylinderPosition = (radius:number, theta:number, y:number, \r\n    center:vec3 = [0,0,0]) => \r\n{\r\n    let sn = Math.sin(theta * Math.PI / 180);\r\n    let cn = Math.cos(theta * Math.PI / 180);\r\n\r\n    return vec3.fromValues(\r\n        radius * cn + center[0], \r\n        y + center[1],\r\n        -radius * sn + center[2]\r\n    );\r\n}\r\n\r\nexport const SpherePosition = (radius:number, theta:number, \r\n    phi:number, center:vec3 = [0,0,0]) =>\r\n{\r\n    const snt = Math.sin(theta * Math.PI / 180);\r\n    const cnt = Math.cos(theta * Math.PI / 180);\r\n    const snp = Math.sin(phi * Math.PI / 180);\r\n    const cnp = Math.cos(phi * Math.PI / 180);\r\n\r\n    return vec3.fromValues(\r\n        radius * snt * cnp + center[0],\r\n        radius * cnt + center[1],\r\n        -radius*snt*snp + center[2]\r\n    );\r\n}","export interface LightInputs \r\n{\r\n    color?: string;\r\n    ambientIntensity?: string;\r\n    diffuseIntensity?: string;\r\n    specularIntensity?: string;\r\n    shininess?: string;\r\n    specularColor?: string;\r\n    isPhong?: string;\r\n}\r\n\r\nexport const Shaders = (li: LightInputs) => \r\n{\r\n    // Define default input values:\r\n    li.color = li.color == undefined ? '(1.0, 0.0, 0.0)' : li.color;\r\n    li.ambientIntensity = li.ambientIntensity == undefined ? '0.2' : li.ambientIntensity;\r\n    li.diffuseIntensity = li.diffuseIntensity == undefined ? '0.8' : li.diffuseIntensity;\r\n    li.specularIntensity = li.specularIntensity == undefined ? '0.4' : li.specularIntensity;\r\n    li.shininess = li.shininess == undefined ? '30.0' : li.shininess;\r\n    li.specularColor = li.specularColor == undefined ? '(1.0, 1.0, 1.0)' : li.specularColor;\r\n    li.isPhong = li.isPhong == undefined ? '0' : li.isPhong;\r\n\r\n    console.log(JSON.stringify(li, null, 4));\r\n\r\n    const vertex = `\r\n        [[block]] struct Uniforms\r\n        {\r\n            viewProjectionMatrix : mat4x4<f32>;\r\n            modelMatrix : mat4x4<f32>;\r\n            normalMatrix : mat4x4<f32>;\r\n        };\r\n        [[binding(0), group(0)]] var<uniform> uniforms : Uniforms;\r\n\r\n        struct Output\r\n        {\r\n            [[builtin(position)]] Position : vec4<f32>;\r\n            [[location(0)]] vPosition : vec4<f32>;\r\n            [[location(1)]] vNormal : vec4<f32>;\r\n        };\r\n\r\n        [[stage(vertex)]]\r\n        fn main([[location(0)]] position : vec4<f32>, [[location(1)]] normal : vec4<f32>) -> Output\r\n        {\r\n            var output : Output;\r\n            let mPosition : vec4<f32> = uniforms.modelMatrix * position;\r\n\r\n            output.vPosition = mPosition;\r\n            output.vNormal = uniforms.normalMatrix * normal;\r\n            output.Position = uniforms.viewProjectionMatrix * mPosition;\r\n\r\n            return output;\r\n        }\r\n    `;\r\n\r\n    const fragment = `\r\n        [[block]] struct Uniforms\r\n        {\r\n            lightPosition : vec4<f32>;\r\n            eyePosition : vec4<f32>;\r\n        };\r\n        [[binding(1), group(0)]] var<uniform> uniforms : Uniforms;\r\n\r\n        [[stage(fragment)]]\r\n        fn main([[location(0)]] vPosition : vec4<f32>, [[location(1)]] vNormal : vec4<f32>) -> [[location(0)]] vec4<f32> \r\n        {\r\n            let N : vec3<f32> = normalize(vNormal.xyz);\r\n            let L : vec3<f32> = normalize(uniforms.lightPosition.xyz - vPosition.xyz);\r\n            let V : vec3<f32> = normalize(uniforms.eyePosition.xyz - vPosition.xyz);\r\n            let H : vec3<f32> = normalize(L + V);\r\n\r\n            let diffuse : f32 = ${li.diffuseIntensity} * max(dot(N, L), 0.0);\r\n            var specular : f32;\r\n            var isp : i32 = ${li.isPhong};\r\n            if(isp == 1)\r\n            {\r\n                specular = ${li.specularIntensity} * pow(max(dot(V, reflect(-L, N)), 0.0), ${li.shininess});\r\n            }\r\n            else\r\n            {\r\n                specular = ${li.specularIntensity} * pow(max(dot(N, H), 0.0), ${li.shininess});\r\n            }\r\n\r\n            let ambient : f32 = ${li.ambientIntensity};\r\n            let finalColor : vec3<f32> = vec3<f32>${li.color} * (ambient + diffuse) + vec3<f32>${li.specularColor} * specular;\r\n\r\n            return vec4<f32>(finalColor, 1.0);\r\n        }\r\n    `;\r\n\r\n    return { vertex, fragment };\r\n}","import { SpherePosition, CylinderPosition, ConePosition, TorusPosition } from './math-func';\r\nimport { vec3 } from 'gl-matrix';\r\n\r\nexport const TorusWireframeData = (R:number, r:number, N:number, n:number, center:vec3 = [0,0,0]) =>\r\n{\r\n    if(n < 2 || N < 2) return;\r\n\r\n    // Create points\r\n    let pts = [];\r\n    let pt:vec3;\r\n    for(let i = 0; i < N; i++)\r\n    {\r\n        let pt1:vec3[] = [];\r\n        for(let j = 0; j < n; j++)\r\n        {\r\n            pt = TorusPosition(R, r, i * 360 / (N-1), j * 360 / (n-1), center);\r\n            pt1.push(pt);\r\n        }\r\n        pts.push(pt1);\r\n    }\r\n\r\n    // Connect points\r\n    let pp = [] as any;\r\n    let p0, p1, p2, p3;\r\n    for(let i = 0; i < N-1; i++)\r\n    {\r\n        for(let j = 0; j < n-1; j++)\r\n        {\r\n            p0 = pts[i][j];\r\n            p1 = pts[i+1][j];\r\n            p2 = pts[i+1][j+1];\r\n            p3 = pts[i][j+1];\r\n            pp.push(\r\n                [\r\n                    p0[0], p0[1], p0[2], p1[0], p1[1], p1[2],\r\n                    p3[0], p3[1], p3[2], p0[0], p0[1], p0[2]\r\n                ]\r\n            );\r\n        }\r\n    }\r\n\r\n    return new Float32Array(pp.flat());\r\n}\r\n\r\nexport const ConeWireframeData = (rtop:number, rbottom:number, height:number,\r\n    n:number, center:vec3 = [0,0,0]) =>\r\n{\r\n    if(n < 2) return;\r\n\r\n    // Create points\r\n    let pts = [] as any, h = height/2;\r\n    for(let i = 0; i < n; i++)\r\n    {\r\n        pts.push(\r\n            [\r\n                CylinderPosition(rtop, i*360/(n-1), h, center),\r\n                CylinderPosition(rbottom, i*360/(n-1), -h, center),\r\n                CylinderPosition(0, i*360/(n-1), -h, center),\r\n                CylinderPosition(0, i*360/(n-1), h, center),\r\n            ]\r\n        );\r\n    }\r\n\r\n    // Connect points\r\n    let p = [] as any;\r\n    let p0, p1, p2, p3, p4, p5;\r\n    for(let i = 0; i < n-1; i++)\r\n    {\r\n        p0 = pts[i][0];\r\n        p1 = pts[i][1];\r\n        p2 = pts[i][2];\r\n        p3 = pts[i][3];\r\n        p4 = pts[i+1][0];\r\n        p5 = pts[i+1][1];\r\n\r\n        p.push(\r\n            [\r\n                // Top\r\n                p0[0], p0[1], p0[2], p3[0], p3[1], p3[2],\r\n                p4[0], p4[1], p4[2], p0[0], p0[1], p0[2],\r\n                \r\n                // Bottom\r\n                p1[0], p1[1], p1[2], p2[0], p2[1], p2[2],\r\n                p5[0], p5[1], p5[2], p1[0], p1[1], p1[2],\r\n                \r\n                // Side\r\n                p0[0], p0[1], p0[2], p1[0], p1[1], p1[2]\r\n            ]\r\n        );\r\n    }\r\n\r\n    return new Float32Array(p.flat());\r\n}\r\n\r\nexport const CylinderWireframeData = (rin:number, rout:number, height:number,\r\n    n:number, center:vec3 = [0,0,0]) =>\r\n{\r\n    if(n < 2 || rin >= rout) return;\r\n\r\n    // Create points\r\n    let pts = [] as any, h = height/2;\r\n    for(let i = 0; i < n; i++)\r\n    {\r\n        pts.push(\r\n            [\r\n                CylinderPosition(rout, i*360/(n-1), h, center),\r\n                CylinderPosition(rout, i*360/(n-1), -h, center),\r\n                CylinderPosition(rin, i*360/(n-1), -h, center),\r\n                CylinderPosition(rin, i*360/(n-1), h, center),\r\n            ]\r\n        );\r\n    }\r\n\r\n    // Connect points\r\n    let p = [] as any;\r\n    let p0, p1, p2, p3, p4, p5, p6, p7;\r\n    for(let i = 0; i < n-1; i++)\r\n    {\r\n        p0 = pts[i][0];\r\n        p1 = pts[i][1];\r\n        p2 = pts[i][2];\r\n        p3 = pts[i][3];\r\n        p4 = pts[i+1][0];\r\n        p5 = pts[i+1][1];\r\n        p6 = pts[i+1][2];\r\n        p7 = pts[i+1][3];\r\n\r\n        p.push(\r\n            [\r\n                // Top face\r\n                p0[0], p0[1], p0[2], p3[0], p3[1], p3[2],\r\n                p3[0], p3[1], p3[2], p7[0], p7[1], p7[2],\r\n                p4[0], p4[1], p4[2], p0[0], p0[1], p0[2],\r\n                \r\n                // Bottom face\r\n                p1[0], p1[1], p1[2], p2[0], p2[1], p2[2],\r\n                p2[0], p2[1], p2[2], p6[0], p6[1], p6[2],\r\n                p5[0], p5[1], p5[2], p1[0], p1[1], p1[2],\r\n                \r\n                // Side face\r\n                p0[0], p0[1], p0[2], p1[0], p1[1], p1[2],\r\n                p3[0], p3[1], p3[2], p2[0], p2[1], p2[2]\r\n            ]\r\n        );\r\n    }\r\n\r\n    return new Float32Array(p.flat());\r\n}\r\n\r\nexport const SphereWireframeData = (radius:number, u:number, v:number, \r\n    center:vec3 = [0,0,0]) =>\r\n{\r\n    if(u < 2 || v < 2) return;\r\n\r\n    // Create points\r\n    let pts = [];\r\n    let pt:vec3;\r\n    for(let i = 0; i < u; i++)\r\n    {\r\n        let pt1:vec3[] = [];\r\n\r\n        for(let j = 0; j < v; j++)\r\n        {\r\n            pt = SpherePosition(\r\n                radius, \r\n                i * 180 / (u-1), \r\n                j * 360 / (v-1), \r\n                center\r\n            );\r\n            pt1.push(pt);\r\n        }\r\n\r\n        pts.push(pt1);\r\n    }\r\n\r\n    // Connect points\r\n    let pp = [] as any;\r\n    let p0, p1, p2, p3;\r\n    for(let i = 0; i < u - 1; i++)\r\n    {\r\n        for(let j = 0; j < v - 1; j++)\r\n        {\r\n            p0 = pts[i][j];\r\n            p1 = pts[i+1][j];\r\n            // p2 = pts[i+1][j+1]\r\n            p3 = pts[i][j+1];\r\n\r\n            pp.push([\r\n                p0[0], p0[1], p0[2], p1[0], p1[1], p1[2],\r\n                p0[0], p0[1], p0[2], p3[0], p3[1], p3[2]\r\n            ]);\r\n        }\r\n    }\r\n\r\n    return new Float32Array(pp.flat());\r\n}\r\n\r\nexport const CubeData1 = () => {\r\n    const vertexData = new Float32Array([\r\n        // position,   color\r\n        -1, -1,  1,    0, 0, 1,     // vertex a, index 0\r\n         1, -1,  1,    1, 0, 1,     // vertex b, index 1\r\n         1,  1,  1,    1, 1, 1,     // vertex c, index 2\r\n        -1,  1,  1,    0, 1, 1,     // vertex d, index 3\r\n        -1, -1, -1,    0, 0, 0,     // vertex e, index 4\r\n         1, -1, -1,    1, 0, 0,     // vertex f, index 5\r\n         1,  1, -1,    1, 1, 0,     // vertex g, index 6\r\n        -1,  1, -1,    0, 1, 0,     // vertex h, index 7 \r\n    ]);\r\n\r\n    const indexData = new Uint32Array([\r\n        // front\r\n        0, 1, 2, 2, 3, 0,\r\n\r\n        // right\r\n        1, 5, 6, 6, 2, 1,\r\n\r\n        // back\r\n        4, 7, 6, 6, 5, 4,\r\n\r\n        // left\r\n        0, 3, 7, 7, 4, 0,\r\n\r\n        // top\r\n        3, 2, 6, 6, 7, 3,\r\n\r\n        // bottom\r\n        0, 4, 5, 5, 1, 0\r\n    ]);\r\n\r\n    return {\r\n        vertexData,\r\n        indexData\r\n    };\r\n};\r\n\r\nexport const CubeData = () =>{\r\n    const positions = new Float32Array([\r\n        // front\r\n        -1, -1,  1,  \r\n         1, -1,  1,  \r\n         1,  1,  1,\r\n         1,  1,  1,\r\n        -1,  1,  1,\r\n        -1, -1,  1,\r\n\r\n        // right\r\n         1, -1,  1,\r\n         1, -1, -1,\r\n         1,  1, -1,\r\n         1,  1, -1,\r\n         1,  1,  1,\r\n         1, -1,  1,\r\n\r\n        // back\r\n        -1, -1, -1,\r\n        -1,  1, -1,\r\n         1,  1, -1,\r\n         1,  1, -1,\r\n         1, -1, -1,\r\n        -1, -1, -1,\r\n\r\n        // left\r\n        -1, -1,  1,\r\n        -1,  1,  1,\r\n        -1,  1, -1,\r\n        -1,  1, -1,\r\n        -1, -1, -1,\r\n        -1, -1,  1,\r\n\r\n        // top\r\n        -1,  1,  1,\r\n         1,  1,  1,\r\n         1,  1, -1,\r\n         1,  1, -1,\r\n        -1,  1, -1,\r\n        -1,  1,  1,\r\n\r\n        // bottom\r\n        -1, -1,  1,\r\n        -1, -1, -1,\r\n         1, -1, -1,\r\n         1, -1, -1,\r\n         1, -1,  1,\r\n        -1, -1,  1\r\n    ]);\r\n\r\n    const colors = new Float32Array([\r\n        // front - blue\r\n        0, 0, 1,\r\n        0, 0, 1,\r\n        0, 0, 1,\r\n        0, 0, 1,\r\n        0, 0, 1,\r\n        0, 0, 1,\r\n\r\n        // right - red\r\n        1, 0, 0,\r\n        1, 0, 0,\r\n        1, 0, 0,\r\n        1, 0, 0,\r\n        1, 0, 0,\r\n        1, 0, 0,\r\n\r\n        //back - yellow\r\n        1, 1, 0,\r\n        1, 1, 0,\r\n        1, 1, 0,\r\n        1, 1, 0,\r\n        1, 1, 0,\r\n        1, 1, 0,\r\n\r\n        //left - aqua\r\n        0, 1, 1,\r\n        0, 1, 1,\r\n        0, 1, 1,\r\n        0, 1, 1,\r\n        0, 1, 1,\r\n        0, 1, 1,\r\n\r\n        // top - green\r\n        0, 1, 0,\r\n        0, 1, 0,\r\n        0, 1, 0,\r\n        0, 1, 0,\r\n        0, 1, 0,\r\n        0, 1, 0,\r\n\r\n        // bottom - fuchsia\r\n        1, 0, 1,\r\n        1, 0, 1,\r\n        1, 0, 1,\r\n        1, 0, 1,\r\n        1, 0, 1,\r\n        1, 0, 1\r\n    ]);\r\n\r\n    const normals = new Float32Array([\r\n        // front\r\n        0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\r\n\r\n        // right\r\n        1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,\r\n\r\n        // back           \r\n        0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1,\r\n\r\n        // left\r\n        -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0,\r\n\r\n        // top\r\n        0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,\r\n\r\n        // bottom\r\n        0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0\r\n    ]);\r\n\r\n    return {\r\n        positions,\r\n        colors,\r\n        normals\r\n    };\r\n}","'use strict'\n\nmodule.exports = createTurntableController\n\nvar filterVector = require('filtered-vector')\nvar invert44     = require('gl-mat4/invert')\nvar rotateM      = require('gl-mat4/rotate')\nvar cross        = require('gl-vec3/cross')\nvar normalize3   = require('gl-vec3/normalize')\nvar dot3         = require('gl-vec3/dot')\n\nfunction len3(x, y, z) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2))\n}\n\nfunction clamp1(x) {\n  return Math.min(1.0, Math.max(-1.0, x))\n}\n\nfunction findOrthoPair(v) {\n  var vx = Math.abs(v[0])\n  var vy = Math.abs(v[1])\n  var vz = Math.abs(v[2])\n\n  var u = [0,0,0]\n  if(vx > Math.max(vy, vz)) {\n    u[2] = 1\n  } else if(vy > Math.max(vx, vz)) {\n    u[0] = 1\n  } else {\n    u[1] = 1\n  }\n\n  var vv = 0\n  var uv = 0\n  for(var i=0; i<3; ++i ) {\n    vv += v[i] * v[i]\n    uv += u[i] * v[i]\n  }\n  for(var i=0; i<3; ++i) {\n    u[i] -= (uv / vv) *  v[i]\n  }\n  normalize3(u, u)\n  return u\n}\n\nfunction TurntableController(zoomMin, zoomMax, center, up, right, radius, theta, phi) {\n  this.center = filterVector(center)\n  this.up     = filterVector(up)\n  this.right  = filterVector(right)\n  this.radius = filterVector([radius])\n  this.angle  = filterVector([theta, phi])\n  this.angle.bounds = [[-Infinity,-Math.PI/2], [Infinity,Math.PI/2]]\n  this.setDistanceLimits(zoomMin, zoomMax)\n\n  this.computedCenter = this.center.curve(0)\n  this.computedUp     = this.up.curve(0)\n  this.computedRight  = this.right.curve(0)\n  this.computedRadius = this.radius.curve(0)\n  this.computedAngle  = this.angle.curve(0)\n  this.computedToward = [0,0,0]\n  this.computedEye    = [0,0,0]\n  this.computedMatrix = new Array(16)\n  for(var i=0; i<16; ++i) {\n    this.computedMatrix[i] = 0.5\n  }\n\n  this.recalcMatrix(0)\n}\n\nvar proto = TurntableController.prototype\n\nproto.setDistanceLimits = function(minDist, maxDist) {\n  if(minDist > 0) {\n    minDist = Math.log(minDist)\n  } else {\n    minDist = -Infinity\n  }\n  if(maxDist > 0) {\n    maxDist = Math.log(maxDist)\n  } else {\n    maxDist = Infinity\n  }\n  maxDist = Math.max(maxDist, minDist)\n  this.radius.bounds[0][0] = minDist\n  this.radius.bounds[1][0] = maxDist\n}\n\nproto.getDistanceLimits = function(out) {\n  var bounds = this.radius.bounds[0]\n  if(out) {\n    out[0] = Math.exp(bounds[0][0])\n    out[1] = Math.exp(bounds[1][0])\n    return out\n  }\n  return [ Math.exp(bounds[0][0]), Math.exp(bounds[1][0]) ]\n}\n\nproto.recalcMatrix = function(t) {\n  //Recompute curves\n  this.center.curve(t)\n  this.up.curve(t)\n  this.right.curve(t)\n  this.radius.curve(t)\n  this.angle.curve(t)\n\n  //Compute frame for camera matrix\n  var up     = this.computedUp\n  var right  = this.computedRight\n  var uu = 0.0\n  var ur = 0.0\n  for(var i=0; i<3; ++i) {\n    ur += up[i] * right[i]\n    uu += up[i] * up[i]\n  }\n  var ul = Math.sqrt(uu)\n  var rr = 0.0\n  for(var i=0; i<3; ++i) {\n    right[i] -= up[i] * ur / uu\n    rr       += right[i] * right[i]\n    up[i]    /= ul\n  }\n  var rl = Math.sqrt(rr)\n  for(var i=0; i<3; ++i) {\n    right[i] /= rl\n  }\n\n  //Compute toward vector\n  var toward = this.computedToward\n  cross(toward, up, right)\n  normalize3(toward, toward)\n\n  //Compute angular parameters\n  var radius = Math.exp(this.computedRadius[0])\n  var theta  = this.computedAngle[0]\n  var phi    = this.computedAngle[1]\n\n  var ctheta = Math.cos(theta)\n  var stheta = Math.sin(theta)\n  var cphi   = Math.cos(phi)\n  var sphi   = Math.sin(phi)\n\n  var center = this.computedCenter\n\n  var wx = ctheta * cphi \n  var wy = stheta * cphi\n  var wz = sphi\n\n  var sx = -ctheta * sphi\n  var sy = -stheta * sphi\n  var sz = cphi\n\n  var eye = this.computedEye\n  var mat = this.computedMatrix\n  for(var i=0; i<3; ++i) {\n    var x      = wx * right[i] + wy * toward[i] + wz * up[i]\n    mat[4*i+1] = sx * right[i] + sy * toward[i] + sz * up[i]\n    mat[4*i+2] = x\n    mat[4*i+3] = 0.0\n  }\n\n  var ax = mat[1]\n  var ay = mat[5]\n  var az = mat[9]\n  var bx = mat[2]\n  var by = mat[6]\n  var bz = mat[10]\n  var cx = ay * bz - az * by\n  var cy = az * bx - ax * bz\n  var cz = ax * by - ay * bx\n  var cl = len3(cx, cy, cz)\n  cx /= cl\n  cy /= cl\n  cz /= cl\n  mat[0] = cx\n  mat[4] = cy\n  mat[8] = cz\n\n  for(var i=0; i<3; ++i) {\n    eye[i] = center[i] + mat[2+4*i]*radius\n  }\n\n  for(var i=0; i<3; ++i) {\n    var rr = 0.0\n    for(var j=0; j<3; ++j) {\n      rr += mat[i+4*j] * eye[j]\n    }\n    mat[12+i] = -rr\n  }\n  mat[15] = 1.0\n}\n\nproto.getMatrix = function(t, result) {\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n  if(result) {\n    for(var i=0; i<16; ++i) {\n      result[i] = mat[i]\n    }\n    return result\n  }\n  return mat\n}\n\nvar zAxis = [0,0,0]\nproto.rotate = function(t, dtheta, dphi, droll) {\n  this.angle.move(t, dtheta, dphi)\n  if(droll) {\n    this.recalcMatrix(t)\n\n    var mat = this.computedMatrix\n    zAxis[0] = mat[2]\n    zAxis[1] = mat[6]\n    zAxis[2] = mat[10]\n\n    var up     = this.computedUp\n    var right  = this.computedRight\n    var toward = this.computedToward\n\n    for(var i=0; i<3; ++i) {\n      mat[4*i]   = up[i]\n      mat[4*i+1] = right[i]\n      mat[4*i+2] = toward[i]\n    }\n    rotateM(mat, mat, droll, zAxis)\n    for(var i=0; i<3; ++i) {\n      up[i] =    mat[4*i]\n      right[i] = mat[4*i+1]\n    }\n\n    this.up.set(t, up[0], up[1], up[2])\n    this.right.set(t, right[0], right[1], right[2])\n  }\n}\n\nproto.pan = function(t, dx, dy, dz) {\n  dx = dx || 0.0\n  dy = dy || 0.0\n  dz = dz || 0.0\n\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n\n  var dist = Math.exp(this.computedRadius[0])\n\n  var ux = mat[1]\n  var uy = mat[5]\n  var uz = mat[9]\n  var ul = len3(ux, uy, uz)\n  ux /= ul\n  uy /= ul\n  uz /= ul\n\n  var rx = mat[0]\n  var ry = mat[4]\n  var rz = mat[8]\n  var ru = rx * ux + ry * uy + rz * uz\n  rx -= ux * ru\n  ry -= uy * ru\n  rz -= uz * ru\n  var rl = len3(rx, ry, rz)\n  rx /= rl\n  ry /= rl\n  rz /= rl\n\n  var vx = rx * dx + ux * dy\n  var vy = ry * dx + uy * dy\n  var vz = rz * dx + uz * dy\n  this.center.move(t, vx, vy, vz)\n\n  //Update z-component of radius\n  var radius = Math.exp(this.computedRadius[0])\n  radius = Math.max(1e-4, radius + dz)\n  this.radius.set(t, Math.log(radius))\n}\n\nproto.translate = function(t, dx, dy, dz) {\n  this.center.move(t,\n    dx||0.0,\n    dy||0.0,\n    dz||0.0)\n}\n\n//Recenters the coordinate axes\nproto.setMatrix = function(t, mat, axes, noSnap) {\n  \n  //Get the axes for tare\n  var ushift = 1\n  if(typeof axes === 'number') {\n    ushift = (axes)|0\n  } \n  if(ushift < 0 || ushift > 3) {\n    ushift = 1\n  }\n  var vshift = (ushift + 2) % 3\n  var fshift = (ushift + 1) % 3\n\n  //Recompute state for new t value\n  if(!mat) { \n    this.recalcMatrix(t)\n    mat = this.computedMatrix\n  }\n\n  //Get right and up vectors\n  var ux = mat[ushift]\n  var uy = mat[ushift+4]\n  var uz = mat[ushift+8]\n  if(!noSnap) {\n    var ul = len3(ux, uy, uz)\n    ux /= ul\n    uy /= ul\n    uz /= ul\n  } else {\n    var ax = Math.abs(ux)\n    var ay = Math.abs(uy)\n    var az = Math.abs(uz)\n    var am = Math.max(ax,ay,az)\n    if(ax === am) {\n      ux = (ux < 0) ? -1 : 1\n      uy = uz = 0\n    } else if(az === am) {\n      uz = (uz < 0) ? -1 : 1\n      ux = uy = 0\n    } else {\n      uy = (uy < 0) ? -1 : 1\n      ux = uz = 0\n    }\n  }\n\n  var rx = mat[vshift]\n  var ry = mat[vshift+4]\n  var rz = mat[vshift+8]\n  var ru = rx * ux + ry * uy + rz * uz\n  rx -= ux * ru\n  ry -= uy * ru\n  rz -= uz * ru\n  var rl = len3(rx, ry, rz)\n  rx /= rl\n  ry /= rl\n  rz /= rl\n  \n  var fx = uy * rz - uz * ry\n  var fy = uz * rx - ux * rz\n  var fz = ux * ry - uy * rx\n  var fl = len3(fx, fy, fz)\n  fx /= fl\n  fy /= fl\n  fz /= fl\n\n  this.center.jump(t, ex, ey, ez)\n  this.radius.idle(t)\n  this.up.jump(t, ux, uy, uz)\n  this.right.jump(t, rx, ry, rz)\n\n  var phi, theta\n  if(ushift === 2) {\n    var cx = mat[1]\n    var cy = mat[5]\n    var cz = mat[9]\n    var cr = cx * rx + cy * ry + cz * rz\n    var cf = cx * fx + cy * fy + cz * fz\n    if(tu < 0) {\n      phi = -Math.PI/2\n    } else {\n      phi = Math.PI/2\n    }\n    theta = Math.atan2(cf, cr)\n  } else {\n    var tx = mat[2]\n    var ty = mat[6]\n    var tz = mat[10]\n    var tu = tx * ux + ty * uy + tz * uz\n    var tr = tx * rx + ty * ry + tz * rz\n    var tf = tx * fx + ty * fy + tz * fz\n\n    phi = Math.asin(clamp1(tu))\n    theta = Math.atan2(tf, tr)\n  }\n\n  this.angle.jump(t, theta, phi)\n\n  this.recalcMatrix(t)\n  var dx = mat[2]\n  var dy = mat[6]\n  var dz = mat[10]\n\n  var imat = this.computedMatrix\n  invert44(imat, mat)\n  var w  = imat[15]\n  var ex = imat[12] / w\n  var ey = imat[13] / w\n  var ez = imat[14] / w\n\n  var gs = Math.exp(this.computedRadius[0])\n  this.center.jump(t, ex-dx*gs, ey-dy*gs, ez-dz*gs)\n}\n\nproto.lastT = function() {\n  return Math.max(\n    this.center.lastT(),\n    this.up.lastT(),\n    this.right.lastT(),\n    this.radius.lastT(),\n    this.angle.lastT())\n}\n\nproto.idle = function(t) {\n  this.center.idle(t)\n  this.up.idle(t)\n  this.right.idle(t)\n  this.radius.idle(t)\n  this.angle.idle(t)\n}\n\nproto.flush = function(t) {\n  this.center.flush(t)\n  this.up.flush(t)\n  this.right.flush(t)\n  this.radius.flush(t)\n  this.angle.flush(t)\n}\n\nproto.setDistance = function(t, d) {\n  if(d > 0) {\n    this.radius.set(t, Math.log(d))\n  }\n}\n\nproto.lookAt = function(t, eye, center, up) {\n  this.recalcMatrix(t)\n\n  eye    = eye    || this.computedEye\n  center = center || this.computedCenter\n  up     = up     || this.computedUp\n\n  var ux = up[0]\n  var uy = up[1]\n  var uz = up[2]\n  var ul = len3(ux, uy, uz)\n  if(ul < 1e-6) {\n    return\n  }\n  ux /= ul\n  uy /= ul\n  uz /= ul\n\n  var tx = eye[0] - center[0]\n  var ty = eye[1] - center[1]\n  var tz = eye[2] - center[2]\n  var tl = len3(tx, ty, tz)\n  if(tl < 1e-6) {\n    return\n  }\n  tx /= tl\n  ty /= tl\n  tz /= tl\n\n  var right = this.computedRight\n  var rx = right[0]\n  var ry = right[1]\n  var rz = right[2]\n  var ru = ux*rx + uy*ry + uz*rz\n  rx -= ru * ux\n  ry -= ru * uy\n  rz -= ru * uz\n  var rl = len3(rx, ry, rz)\n\n  if(rl < 0.01) {\n    rx = uy * tz - uz * ty\n    ry = uz * tx - ux * tz\n    rz = ux * ty - uy * tx\n    rl = len3(rx, ry, rz)\n    if(rl < 1e-6) {\n      return\n    }\n  }\n  rx /= rl\n  ry /= rl\n  rz /= rl\n\n  this.up.set(t, ux, uy, uz)\n  this.right.set(t, rx, ry, rz)\n  this.center.set(t, center[0], center[1], center[2])\n  this.radius.set(t, Math.log(tl))\n\n  var fx = uy * rz - uz * ry\n  var fy = uz * rx - ux * rz\n  var fz = ux * ry - uy * rx\n  var fl = len3(fx, fy, fz)\n  fx /= fl\n  fy /= fl\n  fz /= fl\n\n  var tu = ux*tx + uy*ty + uz*tz\n  var tr = rx*tx + ry*ty + rz*tz\n  var tf = fx*tx + fy*ty + fz*tz\n\n  var phi   = Math.asin(clamp1(tu))\n  var theta = Math.atan2(tf, tr)\n\n  var angleState = this.angle._state\n  var lastTheta  = angleState[angleState.length-1]\n  var lastPhi    = angleState[angleState.length-2]\n  lastTheta      = lastTheta % (2.0 * Math.PI)\n  var dp = Math.abs(lastTheta + 2.0 * Math.PI - theta)\n  var d0 = Math.abs(lastTheta - theta)\n  var dn = Math.abs(lastTheta - 2.0 * Math.PI - theta)\n  if(dp < d0) {\n    lastTheta += 2.0 * Math.PI\n  }\n  if(dn < d0) {\n    lastTheta -= 2.0 * Math.PI\n  }\n\n  this.angle.jump(this.angle.lastT(), lastTheta, lastPhi)\n  this.angle.set(t, theta, phi)\n}\n\nfunction createTurntableController(options) {\n  options = options || {}\n\n  var center = options.center || [0,0,0]\n  var up     = options.up     || [0,1,0]\n  var right  = options.right  || findOrthoPair(up)\n  var radius = options.radius || 1.0\n  var theta  = options.theta  || 0.0\n  var phi    = options.phi    || 0.0\n\n  center = [].slice.call(center, 0, 3)\n\n  up = [].slice.call(up, 0, 3)\n  normalize3(up, up)\n\n  right = [].slice.call(right, 0, 3)\n  normalize3(right, right)\n\n  if('eye' in options) {\n    var eye = options.eye\n    var toward = [\n      eye[0]-center[0],\n      eye[1]-center[1],\n      eye[2]-center[2]\n    ]\n    cross(right, toward, up)\n    if(len3(right[0], right[1], right[2]) < 1e-6) {\n      right = findOrthoPair(up)\n    } else {\n      normalize3(right, right)\n    }\n\n    radius = len3(toward[0], toward[1], toward[2])\n\n    var ut = dot3(up, toward) / radius\n    var rt = dot3(right, toward) / radius\n    phi    = Math.acos(ut)\n    theta  = Math.acos(rt)\n  }\n\n  //Use logarithmic coordinates for radius\n  radius = Math.log(radius)\n\n  //Return the controller\n  return new TurntableController(\n    options.zoomMin,\n    options.zoomMax,\n    center,\n    up,\n    right,\n    radius,\n    theta,\n    phi)\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { CreateShapeWithLight } from './light';\r\nimport { LightInputs } from './shaders';\r\nimport { CubeData } from './vertex_data';\r\nimport $ from 'jquery';\r\n\r\nconst data = CubeData();\r\nlet li:LightInputs = {};\r\nlet isAnimation = true;\r\nCreateShapeWithLight(data.positions, data.normals, li, isAnimation);"],"names":["module","exports","element","options","document","body","limits","Infinity","distanceLimits","zoomMin","zoomMax","view","createView","center","up","eye","mode","pmatrix","distance","width","clientWidth","height","clientHeight","camera","delay","rotateSpeed","zoomSpeed","translateSpeed","flipX","flipY","modes","tick","t","now","this","idle","flush","ctime","recalcMatrix","allEqual","matrix","computedMatrix","i","sizeChanged","Math","exp","computedRadius","lookAt","lastT","rotate","pitch","yaw","roll","pan","dx","dy","dz","translate","Object","defineProperties","get","set","mat","setMatrix","enumerable","getMode","setMode","computedCenter","ncenter","computedEye","neye","computedUp","nup","d","setDistance","getDistanceLimits","v","setDistanceLimits","addEventListener","ev","preventDefault","lastX","lastY","lastMods","shift","control","alt","meta","handleInteraction","buttons","x","y","mods","scale","drot","PI","kzoom","window","innerHeight","mouseChange","xy","mouseOffset","changedTouches","hasPassive","passive","mouseWheel","abs","innerWidth","turntable","createTurntable","orbit","createOrbit","createMatrix","ViewController","controllers","_controllerNames","keys","_controllerList","map","n","_mode","_active","proto","prototype","a0","cc","length","a1","a2","a3","getDistance","out","idx","indexOf","prev","next","max","ge","a","c","l","h","m","undefined","gt","lt","le","eq","p","norm","f","p0","v0","p1","v1","ti","t2","ti2","h00","h10","h01","h11","Array","derivative","dh00","dh10","dh01","dh11","initState","initVelocity","initTime","arguments","FilteredVector","zero","getZero","Error","cubicHermite","bsearch","clamp","lo","hi","min","state0","velocity0","t0","dimension","bounds","_state","slice","reverse","_velocity","_time","_scratch","result","splice","curve","time","state","velocity","ptr","tf","dt","x0","x1","steady","dcurve","stable","jump","push","j","sf","xc","move","statePtr","Float32Array","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","xz","yz","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","identity","y0","y1","z0","z1","len","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","sqrt","b","b0","b1","b2","b3","rad","axis","s","b12","b20","b21","b22","sin","cos","EPSILON","ARRAY_TYPE","RANDOM","random","setMatrixArrayType","type","degree","toRadian","equals","create","clone","copy","fromValues","m00","m01","m10","m11","transpose","invert","adjoint","determinant","multiply","fromRotation","fromScaling","str","frob","hypot","LDU","L","D","U","add","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","mul","sub","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","fromTranslation","fromMat4","m02","m12","m20","m21","m22","fromMat2d","fromQuat","normalFromMat4","projection","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspectiveNO","fovy","aspect","tan","perspective","perspectiveZO","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","orthoNO","lr","bt","ortho","orthoZO","targetTo","target","a9","a14","a15","b9","b13","b14","b15","divide","ceil","floor","round","scaleAndAdd","squaredDistance","squaredLength","negate","inverse","normalize","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","mag","cosine","acos","vec","div","dist","sqrDist","sqrLen","forEach","stride","offset","count","fn","arg","dot","u","A","B","C","E","F","G","H","I","J","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fRoot","fTrace","k","fromEuler","halfToRad","cx","cy","cz","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","rotationTo","sqlerp","setAxes","dq","w1","fromRotationTranslationValues","outer","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","sinC","cosC","isBrowser","supported","opts","defineProperty","removeEventListener","e","detect","vec3","tmp","perspectiveMatrix","tmpVec4","row","pdum3","combine","scale2","skew","quaternion","mat4x4","mat3from4","m44","recompose","decompose","state1","start","end","alpha","r0","r1","mat4","temp","m4interp","invert44","DEFAULT_CENTER","MatrixCameraController","initialMatrix","_components","prevMatrix","nextMatrix","computedInverse","_limits","tidx","comps","imat","radius","mc","d2","tvec","lim","callback","buttonState","attached","updateMods","changed","altKey","shiftKey","ctrlKey","metaKey","handleEvent","nextButtons","nextX","mouse","nextY","clearState","handleBlur","handleMods","handleMouseMove","handleMouseDown","handleMouseUp","attachListeners","enabled","rootPosition","currentTarget","srcElement","isArray","clientX","clientY","rect","getBoundingClientRect","mouseElement","which","button","offsetX","offsetY","toPX","noScroll","lineHeight","listener","deltaX","deltaY","deltaZ","deltaMode","rx","ry","rz","ux","uy","uz","fx","fy","fz","tr","rotation","call","normalize4","OrbitCameraController","filterVector","mat4FromQuat","quatFromFrame","len3","len4","al","initQuat","initCenter","initRadius","computedRotation","quat","rr","getMatrix","ul","ru","fu","fr","fl","vx","vy","vz","bl","cw","cl","toJSON","fromJSON","String","num","parseFloat","match","g","performance","Date","parseUnit","PIXELS_PER_INCH","getSizeBrutal","getPropertyInPX","prop","parts","getComputedStyle","getPropertyValue","unit","testDIV","createElement","style","appendChild","size","removeChild","trim","toLowerCase","isNaN","px","CreateAnimation","draw","isAnimation","requestAnimationFrame","step","CreateTransforms","modelMat","rotateXMat","rotateYMat","rotateZMat","translateMat","scaleMat","CreateViewProjection","aspectRatio","cameraPosition","lookDirection","upDirection","viewMatrix","projectionMatrix","viewProjectionMatrix","cameraOption","CreateGPUBufferUint","device","data","usageFlag","GPUBufferUsage","INDEX","COPY_DST","buffer","createBuffer","byteLength","usage","mappedAtCreation","Uint32Array","getMappedRange","unmap","CreateGPUBuffer","VERTEX","InitGPU","checkgpu","CheckWebGPU","includes","console","canvas","getElementById","adapter","navigator","gpu","requestAdapter","requestDevice","context","getContext","devicePixelRatio","format","getPreferredFormat","configure","createCamera","CreateShapeWithLight","vertexData","normalData","lightInputs","numberOfVertices","vertexBuffer","normalBuffer","shader","Shaders","pipeline","createRenderPipeline","vertex","createShaderModule","code","entryPoint","buffers","arrayStride","attributes","shaderLocation","fragment","targets","primitive","topology","depthStencil","depthWriteEnabled","depthCompare","normalMatrix","modelMatrix","vMatrix","vpMatrix","vp","eyePosition","lightPosition","vertexUniformBuffer","UNIFORM","fragmentUniformBuffer","queue","writeBuffer","uniformBindGroup","createBindGroup","layout","getBindGroupLayout","entries","binding","resource","textureView","getCurrentTexture","depthTexture","createTexture","GPUTextureUsage","RENDER_ATTACHMENT","renderPassDescription","colorAttachments","loadValue","storeOp","depthStencilAttachment","depthLoadValue","depthStoreOp","stencilLoadValue","stencilStoreOp","pMatrix","flat","commandEncoder","createCommandEncoder","renderPass","beginRenderPass","setPipeline","setVertexBuffer","setBindGroup","endPass","submit","finish","TorusPosition","R","snu","cnu","snv","cnv","ConePosition","theta","sn","cn","CylinderPosition","SpherePosition","phi","snt","cnt","snp","cnp","li","color","ambientIntensity","diffuseIntensity","specularIntensity","shininess","specularColor","isPhong","JSON","stringify","TorusWireframeData","N","pt","pts","pt1","p2","p3","pp","ConeWireframeData","rtop","rbottom","p4","p5","CylinderWireframeData","rin","rout","p6","p7","SphereWireframeData","CubeData1","indexData","CubeData","positions","colors","normals","findOrthoPair","normalize3","toward","ut","dot3","rt","TurntableController","rotateM","clamp1","vv","uv","computedRight","computedAngle","computedToward","minDist","maxDist","uu","ur","ctheta","stheta","cphi","sphi","zAxis","dtheta","dphi","droll","axes","noSnap","ushift","vshift","am","ex","ey","ez","cr","cf","tu","tz","asin","gs","tl","angleState","lastTheta","lastPhi","dp","d0","dn","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","key","globalThis","Function","obj","hasOwnProperty","Symbol","toStringTag","value"],"sourceRoot":""}